{"version":3,"sources":["head.png","server.js","component/contract.js","component/SelectAccount.js","Lang.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","host","Axios","api","bizData","pageData","callback","data","base","timestamp","sign","biz","page","axios","post","then","response","catch","error","_method","_params","id","jsonrpc","method","params","console","log","Contract","address","abi","dapp","name","contractAddress","github","author","url","document","location","href","logo","protocol","tmpPkr","Option","ct","SelectAccount","window","props","handleOk","e","that","accounts","state","ac","MainPKr","selectAccount","hiddenAccount","handleCancel","onChange","v","accountOptions","this","seropp","init","res","getAccounts","pk","slice","getAccountList","dataArray","i","tmpArr","acName","Name","push","value","key","formatPK","PK","setState","title","visible","onOk","onCancel","showSearch","style","width","placeholder","Component","Lang","zh_CN","project","balanceSero","account","utxo","contract","swith","estimatedTotal","dayIncome","staticIncome","withdraw","detail","referId","areaId","totalInvest","profitLevel","latestTime","totalReturn","totalReturnDay","recommend","staticIncomeTips","staticIncomeTips2","investDetail","myIncome","areaTotal","areaOtherTotal","staticReward","recommendReward","nobilityReward","vipReward","viewCode","button","deposit","invest","trigger","close","copy","modal","amount","amountTips","availableSERO","total","estimate","password","passwordPlace","tips","toast","lessAmount","minInvest","tx","copySuccess","en_US","ticket","availableExchange","be_BY","ko_KR","ja_JP","Language","Footer","Header","Content","serojs","callContract","decimal","BigNumber","pow","Countdown","openNotificationWithIcon","type","message","desc","notification","description","wordBreak","whiteSpace","wordWrap","duration","InvestForm","create","confirmLoading","estimateReturn","estimateLevel","setTimeout","times","parseFloat","toFixed","sero","rate","onCreate","form","getFieldDecorator","setFieldsValue","lang","layout","Item","label","rules","required","disabled","autoComplete","min","precision","max","step","staticTotal","allowClear","color","multipliedBy","React","ContentPage","currentAccount","showAccountSelect","loading","localStorage","setItem","reload","checked","showDeposit","handleBuyAsnowCancel","showBuyAsnow","handleBuyAsnowCreate","cb","formRef","validateFields","err","values","getFieldValue","executeMethod","toString","resetFields","handleInvestCancel","showInvest","handleInvestCreate","formRef2","amountSero","ct_details","comparedTo","warn","saveInvestFormRef","showShareProfit","showWithdraw","modal1Visible","ct_id","showSelectAccount","getDetail","getContractSeroBalance","getInfo","info","language","setInterval","getAccount","getItem","canvas","getElementById","QRCode","toCanvas","callMethod","ct_balanceOfSero","dividedBy","getAccountDetail","Balance","forEach","currency","identicon","largeAreaId","largeAreaTotal","returnAmount","achievement","recommendNum","parseInt","star","isKing","detailsOfIncome","calcuStaticProfit","args","packData","callParams","from","to","call","callData","unPackData","cy","executeData","gas_price","estimateParam","estimateGas","gas","executeContract","accountName","staticTimestamp","salesPieData","x","y","showChart","countDown","nextShareTime","returnPercent","a","b","showCountDown","Math","ceil","className","marginTop","src","Head","fontSize","margin","span","Meta","count","textAlign","onClick","float","dayProfit","format","onFinish","shareProfit","height","percent","hasLegend","animate","subTitle","dangerouslySetInnerHTML","__html","reduce","pre","now","valueFormat","val","dashed","suffix","minus","dateTimestamp","cDate","Date","appendZero","getMonth","getDate","getHours","getMinutes","convertUTCDate","footer","getContainer","success","wrappedComponentRef","asnow","asnowBalances","time","getTime","App","changeLocale","localeValue","target","locale","zhCN","enUS","documentElement","clientHeight","Boolean","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"mFAAAA,EAAOC,QAAU,IAA0B,kC,wkBCEvCC,EAAO,yBA0DIC,E,6FAtDNC,EAAKC,EAASC,EAAUC,GACzB,IAAIC,EAAO,CACPC,KAAM,CACFC,UAAW,QACXC,KAAM,oEAEVC,IAAKP,EACLQ,KAAMP,GAEVQ,IAAMC,KAAKb,EAAOE,EAAKI,GAAMQ,MAAK,SAAUC,GACxC,IAAIT,EAAOS,EAAST,KAChBD,GACAA,EAASC,MAEdU,OAAM,SAAUC,S,kCAKXC,EAASC,EAASd,GAC1B,IAAIC,EAAO,CACPc,GAAI,EACJC,QAAS,MACTC,OAAQJ,EACRK,OAAQJ,GAEZP,IAAMC,KAAKb,EAAO,MAAOM,GAAMQ,MAAK,SAAUC,GAC1C,IAAIT,EAAOS,EAAST,KAChBD,GACAA,EAASC,MAEdU,OAAM,SAAUC,GACfO,QAAQC,IAAI,cAAcR,Q,oCAIpBC,EAASC,EAASd,GAC5B,IAAIC,EAAO,CACPc,GAAI,EACJE,OAAQJ,EACRK,OAAQJ,GAEZP,IAAMC,KAAKb,EAAO,aAAcM,GAAMQ,MAAK,SAAUC,GACjD,IAAIT,EAAOS,EAAST,KAChBD,GACAA,EAASC,MAEdU,OAAM,SAAUC,W,sBCrCZS,E,sCAdXC,QAAU,2F,KAEVC,IAAM,CAAC,CAAC,UAAW,EAAM,OAAS,CAAC,CAAC,KAAO,cAAc,KAAO,WAAW,KAAO,SAAS,QAAU,CAAC,CAAC,KAAO,GAAG,KAAO,SAAS,SAAU,EAAK,gBAAkB,UAAU,KAAO,YAAY,CAAC,UAAW,EAAK,OAAS,GAAG,KAAO,kBAAkB,QAAU,CAAC,CAAC,KAAO,GAAG,KAAO,WAAW,CAAC,KAAO,GAAG,KAAO,WAAW,CAAC,KAAO,GAAG,KAAO,WAAW,CAAC,KAAO,GAAG,KAAO,WAAW,CAAC,KAAO,GAAG,KAAO,WAAW,CAAC,KAAO,GAAG,KAAO,YAAY,SAAU,EAAM,gBAAkB,OAAO,KAAO,YAAY,CAAC,UAAW,EAAM,OAAS,GAAG,KAAO,sBAAsB,QAAU,GAAG,SAAU,EAAM,gBAAkB,aAAa,KAAO,YAAY,CAAC,UAAW,EAAM,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,YAAY,KAAO,gBAAgB,QAAU,GAAG,SAAU,EAAM,gBAAkB,aAAa,KAAO,YAAY,CAAC,UAAW,EAAK,OAAS,GAAG,KAAO,UAAU,QAAU,CAAC,CAAC,KAAO,GAAG,KAAO,UAAU,CAAC,KAAO,GAAG,KAAO,UAAU,CAAC,KAAO,GAAG,KAAO,WAAW,CAAC,KAAO,GAAG,KAAO,WAAW,CAAC,KAAO,GAAG,KAAO,WAAW,CAAC,KAAO,GAAG,KAAO,WAAW,CAAC,KAAO,GAAG,KAAO,WAAW,CAAC,KAAO,GAAG,KAAO,WAAW,CAAC,KAAO,GAAG,KAAO,WAAW,CAAC,KAAO,GAAG,KAAO,SAAS,CAAC,KAAO,GAAG,KAAO,QAAQ,CAAC,KAAO,GAAG,KAAO,YAAY,SAAU,EAAM,gBAAkB,OAAO,KAAO,YAAY,CAAC,UAAW,EAAM,OAAS,GAAG,KAAO,kBAAkB,QAAU,GAAG,SAAU,EAAM,gBAAkB,aAAa,KAAO,YAAY,CAAC,UAAW,EAAM,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,YAAY,KAAO,eAAe,QAAU,GAAG,SAAU,EAAM,gBAAkB,aAAa,KAAO,YAAY,CAAC,UAAW,EAAK,OAAS,GAAG,KAAO,QAAQ,QAAU,CAAC,CAAC,KAAO,GAAG,KAAO,YAAY,SAAU,EAAM,gBAAkB,OAAO,KAAO,YAAY,CAAC,UAAW,EAAK,OAAS,GAAG,KAAO,oBAAoB,QAAU,CAAC,CAAC,KAAO,GAAG,KAAO,YAAY,SAAU,EAAM,gBAAkB,OAAO,KAAO,YAAY,CAAC,UAAW,EAAK,OAAS,GAAG,KAAO,KAAK,QAAU,CAAC,CAAC,KAAO,GAAG,KAAO,WAAW,SAAU,EAAM,gBAAkB,OAAO,KAAO,YAAY,CAAC,UAAW,EAAK,OAAS,GAAG,KAAO,gBAAgB,QAAU,CAAC,CAAC,KAAO,SAAS,KAAO,YAAY,SAAU,EAAM,gBAAkB,OAAO,KAAO,YAAY,CAAC,UAAW,EAAK,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,WAAW,KAAO,YAAY,QAAU,CAAC,CAAC,KAAO,GAAG,KAAO,SAAS,SAAU,EAAM,gBAAkB,OAAO,KAAO,YAAY,CAAC,UAAW,EAAM,OAAS,CAAC,CAAC,KAAO,oBAAoB,KAAO,YAAY,KAAO,sBAAsB,QAAU,GAAG,SAAU,EAAM,gBAAkB,aAAa,KAAO,YAAY,CAAC,UAAW,EAAM,OAAS,CAAC,CAAC,KAAO,WAAW,KAAO,YAAY,KAAO,oBAAoB,QAAU,GAAG,SAAU,EAAM,gBAAkB,aAAa,KAAO,YAAY,CAAC,OAAS,CAAC,CAAC,KAAO,cAAc,KAAO,WAAW,CAAC,KAAO,mBAAmB,KAAO,YAAY,SAAU,EAAM,gBAAkB,aAAa,KAAO,eAAe,CAAC,WAAY,EAAM,OAAS,CAAC,CAAC,SAAU,EAAK,KAAO,gBAAgB,KAAO,WAAW,CAAC,SAAU,EAAK,KAAO,WAAW,KAAO,YAAY,KAAO,uBAAuB,KAAO,U,KAEj9FC,KAAO,CACHC,KAAM,MACNC,gBAAiB,2FACjBC,OAAQ,+BACRC,OAAQ,WACRC,IAAKC,SAASC,SAASC,KACvBC,KAAMH,SAASC,SAASG,SAAW,KAAOJ,SAASC,SAASpC,KAAO,kBCLvEwC,EAAS,GAENC,GADI,IAAIxC,E,IACRwC,QAEHC,EAAK,IAAIhB,EAqGEiB,GAlGJC,OAAOR,SAASpC,K,kDAMvB,WAAY6C,GAAQ,IAAD,8BACf,cAAMA,IAkBVC,SAAW,SAAAC,GACP,IAAIC,EAAI,eACR,GAAe,KAAXR,EAAe,CACf,IADe,EACXS,EAAWD,EAAKE,MAAMD,SADX,cAEAA,GAFA,IAEf,2BAAyB,CAAC,IAAjBE,EAAgB,QACjBA,EAAGC,UAAYZ,GACfQ,EAAKH,MAAMQ,cAAcF,IAJlB,+BAQnBH,EAAKH,MAAMS,iBA7BI,EAgCnBC,aAAe,SAAAR,GACH,eACHF,MAAMS,iBAlCI,EAqCnBE,SAAW,SAACC,GACRjB,EAASiB,GApCT,EAAKP,MAAQ,CACTQ,eAAgB,GAChBT,SAAU,IAJC,E,gEAUf,IAAID,EAAOW,KACXC,IAAOC,KAAKnB,EAAGb,MAAM,SAAUiC,GACxBA,GACCd,EAAKe,mB,+BA4BRC,GACL,OAAOA,EAAGC,MAAM,EAAG,IAAM,OAASD,EAAGC,OAAO,M,oCAI5C,IAAIjB,EAAOW,KAEXC,IAAOM,gBAAe,SAAUJ,GAC5B,GAAIA,EAAK,CACL,IADK,EACDK,EAAYL,EACZM,EAAI,EACJC,EAAS,GAHR,cAIUF,GAJV,IAIL,2BAA0B,CAAC,IAAlBhB,EAAiB,QAClBmB,EAASnB,EAAGoB,KAChBH,IACKE,IACDA,EAAS,UAAYF,GAEzBC,EAAOG,KAAK,kBAAC/B,EAAD,CAAQgC,MAAOtB,EAAGC,QAASsB,IAAKN,GAAIE,EAAS,IAAMtB,EAAK2B,SAASxB,EAAGyB,OAV/E,8BAYL5B,EAAK6B,SAAS,CACVnB,eAAgBW,EAChBpB,SAAUkB,U,+BAMhB,IAAD,OACL,OACI,uBACIW,MAAM,iBACNC,QAASpB,KAAKd,MAAMkC,QACpBC,KAAMrB,KAAKb,SACXmC,SAAUtB,KAAKJ,cAEf,uBAAQ2B,YAAU,EACVC,MAAO,CAACC,MAAO,OACfC,YAAY,oBACZ7B,SAAU,SAACC,GACP,EAAKD,SAASC,KAGrBE,KAAKT,MAAMQ,qB,GAtFJ4B,c,kGCsabC,G,sCAtbXC,MAAQ,CACJC,QAAS,CACLX,MAAO,2BACP/C,gBAAiB,2BACjB2D,YAAa,mCAGjBC,QAAS,CACLb,MAAO,CACHc,KAAM,2BACNC,SAAU,2BACVC,MAAO,2BACPJ,YAAa,sBACbK,eAAgB,wCAChBC,UAAW,uCACXC,aAAc,8CACdC,SAAU,wCACVC,OAAQ,eACR/E,GAAI,eACJgF,QAAS,iCACTC,OAAQ,2BACRC,YAAa,eACbC,YAAa,2BACbC,WAAY,uCACZC,YAAa,6CACbC,eAAgB,6CAChBC,UAAW,2BACXC,iBAAkB,0GAClBC,kBAAmB,0DACnBC,aAAc,2BACdC,SAAU,2BACVC,UAAW,2BACXC,eAAgB,qDAEhBC,aAAc,2BACdC,gBAAiB,qBACjBC,eAAgB,qBAChBC,UAAW,YACXC,SAAU,wCAGdC,OAAQ,CACJC,QAAS,eACTC,OAAQ,eACRC,QAAS,2BACTxB,SAAU,eACVyB,MAAO,eACPC,KAAM,gBAEVC,MAAO,CACHL,QAAS,CACL1C,MAAO,eACP8C,KAAM,gBAGVH,OAAQ,CACJ3C,MAAO,eACPsB,QAAS,iCACT0B,OAAQ,2BACRC,WAAY,sBACZC,cAAe,iCACfC,MAAO,2BACPC,SAAU,2BACVC,SAAU,2BACVC,cAAe,wCAGnBV,QAAS,CACLS,SAAU,2BACVC,cAAe,wCAGnBlC,SAAU,CACNiC,SAAU,2BACVC,cAAe,uCACfC,KAAM,+EAIlBC,MAAO,CACHC,WAAY,0EACZC,UAAW,sDACXC,GAAI,qHACJC,YAAa,+B,KAKrBC,MAAQ,CACJlD,QAAS,CACLX,MAAO,gBACP/C,gBAAiB,mBACjB2D,YAAa,0BAGjBC,QAAS,CACLb,MAAO,CACHc,KAAM,iBACNC,SAAU,mBACVC,MAAO,iBACPJ,YAAa,iBACbK,eAAgB,gCAChBC,UAAW,yBACXC,aAAc,uBACdC,SAAU,4BACVC,OAAQ,SACR/E,GAAI,KACJgF,QAAS,WACTC,OAAQ,gBACRC,YAAa,eACbC,YAAa,eACbC,WAAY,oBACZC,YAAa,eACbC,eAAgB,iCAChBC,UAAW,mBACXC,iBAAkB,wDAClBC,kBAAmB,kCACnBC,aAAc,cACdC,SAAU,iBACVC,UAAW,uBACXC,eAAgB,iDAEhBC,aAAc,SACdC,gBAAiB,YACjBC,eAAgB,WAChBC,UAAW,MACXC,SAAU,uBAEdC,OAAQ,CACJC,QAAS,eACTC,OAAQ,SACRC,QAAS,iBACTxB,SAAU,WACVyB,MAAO,QACPC,KAAM,QAEVC,MAAO,CACHL,QAAS,CACL1C,MAAO,UACP8C,KAAM,QAGVH,OAAQ,CACJ3C,MAAO,SACPsB,QAAS,WACTwC,OAAQ,UACRd,OAAQ,eACRC,WAAY,0BACZC,cAAe,mBACfa,kBAAmB,eACnBZ,MAAO,QACPC,SAAU,mBACVC,SAAU,YAGdT,QAAS,CACLS,SAAU,YAGdjC,SAAU,CACNiC,SAAU,WACVE,KAAM,iEAIlBC,MAAO,CACHC,WAAY,yDACZC,UAAW,kCACXC,GAAI,+GACJC,YAAa,qC,KAIrBI,MAAQ,CACJrD,QAAS,CACLX,MAAO,8FACP/C,gBAAiB,wFACjB2D,YAAa,0FAGjBC,QAAS,CACLb,MAAO,CACHc,KAAM,4EACNC,SAAU,sHACVC,MAAO,wFACPJ,YAAa,8CACbK,eAAgB,8HAChBC,UAAW,0DACXC,aAAc,0IACdC,SAAU,oIACVC,OAAQ,qEACR/E,GAAI,iCACJgF,QAAS,kIACTC,OAAQ,gDACRC,YAAa,kFACbC,YAAa,0GACbC,WAAY,mIACZC,YAAa,0IACbC,eAAgB,qIAChBC,UAAW,sHACXC,iBAAkB,6UAClBC,kBAAmB,uJACnBC,aAAc,4HACdC,SAAU,wFACVC,UAAW,kIACXC,eAAgB,0KAEhBC,aAAc,gHACdC,gBAAiB,0JACjBC,eAAgB,8FAChBC,UAAW,iDACXC,SAAU,gJAGdC,OAAQ,CACJC,QAAS,6CACTC,OAAQ,+DACRC,QAAS,4EACTxB,SAAU,6EACVyB,MAAO,uCACPC,KAAM,kCAEVC,MAAO,CACHL,QAAS,CACL1C,MAAO,6CACP8C,KAAM,kCAGVH,OAAQ,CACJ3C,MAAO,+DACPsB,QAAS,kIACT0B,OAAQ,8FACRC,WAAY,kHACZC,cAAe,0GACfC,MAAO,6EACPC,SAAU,wFACVC,SAAU,qGACVC,cAAe,mKAGnBV,QAAS,CACLS,SAAU,qGACVC,cAAe,mKAGnBlC,SAAU,CACNiC,SAAU,qGACVC,cAAe,kKACfC,KAAM,sUAIlBC,MAAO,CACHC,WAAY,sRACZC,UAAW,uOACXC,GAAI,udACJC,YAAa,kH,KAKrBK,MAAQ,CACJtD,QAAS,CACLX,MAAO,2BACP/C,gBAAiB,4BACjB2D,YAAa,oCAGjBC,QAAS,CACLb,MAAO,CACHc,KAAM,4BACNC,SAAU,4BACVC,MAAO,4BACPJ,YAAa,4BACbK,eAAgB,0CAChBC,UAAW,kCACXC,aAAc,mCACdC,SAAU,gDACVC,OAAQ,eACR/E,GAAI,eACJgF,QAAS,wBACTC,OAAQ,kBACRC,YAAa,eACbC,YAAa,4BACbC,WAAY,+CACZC,YAAa,0CACbC,eAAgB,6DAChBC,UAAW,mCACXC,iBAAkB,wGAClBC,kBAAmB,kEACnBC,aAAc,2BACdC,SAAU,sBACVC,UAAW,4BACXC,eAAgB,kDAEhBC,aAAc,4BACdC,gBAAiB,4BACjBC,eAAgB,sBAChBC,UAAW,mBACXC,SAAU,qDAGdC,OAAQ,CACJC,QAAS,eACTC,OAAQ,eACRC,QAAS,kCACTxB,SAAU,eACVyB,MAAO,eACPC,KAAM,gBAEVC,MAAO,CACHL,QAAS,CACL1C,MAAO,eACP8C,KAAM,gBAGVH,OAAQ,CACJ3C,MAAO,eACPsB,QAAS,wBACT0B,OAAQ,4BACRC,WAAY,uBACZC,cAAe,+CACfC,MAAO,sBACPC,SAAU,4BACVC,SAAU,4BACVC,cAAe,sDAGnBV,QAAS,CACLS,SAAU,4BACVC,cAAe,sDAGnBlC,SAAU,CACNiC,SAAU,4BACVC,cAAe,qDACfC,KAAM,2GAIlBC,MAAO,CACHC,WAAY,mHACZC,UAAW,0EACXC,GAAI,6KACJC,YAAa,gD,KAKrBM,MAAQ,CACJvD,QAAS,CACLX,MAAO,2BACP/C,gBAAiB,2BACjB2D,YAAa,kDAGjBC,QAAS,CACLb,MAAO,CACHc,KAAM,+DACNC,SAAU,6CACVC,MAAO,qEACPJ,YAAa,2CACbK,eAAgB,iDAChBC,UAAW,uCACXC,aAAc,6DACdC,SAAU,yEACVC,OAAQ,eACR/E,GAAI,SACJgF,QAAS,mCACTC,OAAQ,iBACRC,YAAa,qBACbC,YAAa,iCACbC,WAAY,6CACZC,YAAa,2CACbC,eAAgB,qFAChBC,UAAW,2BACXC,iBAAkB,uIAClBC,kBAAmB,uFACnBC,aAAc,iCACdC,SAAU,yDACVC,UAAW,+DACXC,eAAgB,yGAEhBC,aAAc,uCACdC,gBAAiB,2BACjBC,eAAgB,2BAChBC,UAAW,kBACXC,SAAU,kFAGdC,OAAQ,CACJC,QAAS,qBACTC,OAAQ,eACRC,QAAS,uCACTxB,SAAU,2BACVyB,MAAO,qBACPC,KAAM,gBAEVC,MAAO,CACHL,QAAS,CACL1C,MAAO,qBACP8C,KAAM,gBAGVH,OAAQ,CACJ3C,MAAO,eACPsB,QAAS,mCACT0B,OAAQ,qBACRC,WAAY,sBACZC,cAAe,uCACfC,MAAO,uCACPC,SAAU,2BACVC,SAAU,+DACVC,cAAe,4HAGnBV,QAAS,CACLS,SAAU,+DACVC,cAAe,4HAGnBlC,SAAU,CACNiC,SAAU,+DACVC,cAAe,2HACfC,KAAM,gHAIlBC,MAAO,CACHC,WAAY,iMACZC,UAAW,gEACXC,GAAI,oVACJC,YAAa,wE,0CC1YrBhG,GAAK,IAAIhB,EACT6D,GAAO,IAAI0D,GACSC,I,IAAjBC,O,IAAQC,Q,IAASF,QAGpBrD,GAAWwD,IAAOC,aAAa5G,GAAGd,IAAKc,GAAGf,SAE1C4H,GAAU,IAAIC,IAAU,IAAIC,IAAI,IAC7BC,G,IAAAA,UAGDC,GAA2B,SAACC,EAAMC,EAASC,GAC7CC,EAAA,EAAaH,GAAM,CACfC,QAASA,EACTG,YAAa,uBAAG7E,MAAO,CAAC8E,UAAW,SAAUC,WAAY,WAAYC,SAAU,eAAgBL,GAC/FM,SAAU,QAKZC,GAAa,IAAKC,OAAO,CAACxI,KAAM,kBAAnB,6MAGXoB,MAAQ,CACJqH,gBAAgB,EAChBC,eAAgB,EAChBC,cAAe,EACf7B,OAAQ,EACRd,OAAQ,EACRG,MAAO,GATA,4DAaP,IAAIjF,EAAOW,KACX+G,YAAW,WACP,IAAIC,EAAQ3H,EAAKH,MAAM8H,MACnB1C,EAAQ,IAAIuB,IAAUxG,EAAKE,MAAM4E,QAEjC2C,EAAgB,EAChBE,EAAQ,EACRF,EAAgBE,EAEZC,WAAW5H,EAAKE,MAAM4E,QAAU,GAAK8C,WAAW5H,EAAKE,MAAM4E,QAAU,IACrE2C,EAAgB,EACTG,WAAW5H,EAAKE,MAAM4E,SAAW,KAAO8C,WAAW5H,EAAKE,MAAM4E,QAAU,IAC/E2C,EAAgB,EACTG,WAAW5H,EAAKE,MAAM4E,SAAW,MACxC2C,EAAgB,GAIxBzH,EAAK6B,SAAS,CACVoD,MAAOA,EAAM4C,QAAQ,GACrBJ,cAAeA,MAEpB,MAnCI,+BAsCD,IAAD,SAC4D9G,KAAKd,MAA/DkC,EADF,EACEA,QAAe+F,GADjB,EACWC,KADX,EACiBD,MAAM7F,EADvB,EACuBA,SAAU+F,EADjC,EACiCA,SAAUC,EAD3C,EAC2CA,KAAM7E,EADjD,EACiDA,QAC/C8E,EAAqCD,EAArCC,kBAAmBC,EAAkBF,EAAlBE,eAE1BT,YAAW,WACHtE,GAAuB,IAAZA,GACX+E,EAAe,CAAC,QAAW/E,MAEhC,KAEH,IAAIpD,EAAOW,KACX,OACI,uBACIoB,QAASA,EACTD,MAAOS,GAAKvC,EAAKH,MAAMuI,MAAMzF,QAAQkC,MAAMJ,OAAO3C,MAClDG,SAAUA,EACVD,KAAM,WACF,EAAKH,SAAS,CACV0F,gBAAgB,IAEpBG,YAAW,WACPM,GAAS,SAAUlH,GACfd,EAAK6B,SAAS,CACV0F,eAAgBzG,SAGzB,KAEPyG,eAAgB5G,KAAKT,MAAMqH,gBAE3B,uBAAMc,OAAO,YACT,sBAAMC,KAAN,CAAWC,MAAOhG,GAAKvC,EAAKH,MAAMuI,MAAMzF,QAAQkC,MAAMJ,OAAOrB,SACxD8E,EAAkB,UAAW,CAC1BM,MAAO,CAAC,CAACC,UAAU,EAAM5B,QAAQ,2BADpCqB,CAEE,uBAAO/F,MAAO,CAACC,MAAO,OAAQsG,YAAatF,GAAuB,IAAZA,GAC/Cf,YAAae,GAAoB,GAAIuF,aAAa,UAEhE,sBAAML,KAAN,CACIC,MAAK,UAAKhG,GAAKvC,EAAKH,MAAMuI,MAAMzF,QAAQkC,MAAMJ,OAAOK,OAAhD,gCAA8EgD,EAA9E,WACJI,EAAkB,aAAc,CAC7BM,MAAO,CAAC,CAACC,UAAU,EAAM5B,QAAQ,2BADpCqB,CAEE,uBAAaU,IAAK,EAAGC,UAAW,EAAGC,IAAKlB,WAAWE,GAAOiB,KAAM,IACnD5G,MAAO,CAACC,MAAO,OAAQ5B,SAAU,SAACC,GAC9CT,EAAK6B,SAAS,CAACiD,OAAQrE,IACvBT,EAAKgJ,eACNC,YAAU,EAAC5G,YAAY,WAAWsG,aAAa,SAClD,6BATJ,SASgBpG,GAAKvC,EAAKH,MAAMuI,MAAMzF,QAAQkC,MAAMJ,OAAOM,WAT3D,KAWA,2BAAIxC,GAAKvC,EAAKH,MAAMuI,MAAMzF,QAAQkC,MAAMJ,OAAOS,SAA/C,KAA0D,0BACtD/C,MAAO,CAAC+G,MAAO,YAAalJ,EAAKE,MAAM4E,QAD3C,aACmE,0BAC/D3C,MAAO,CAAC+G,MAAO,YAAalJ,EAAKE,MAAMuH,cADwB,KADnE,aAE2E,4BACvEtF,MAAO,CAAC+G,MAAO,oBAAqB,IAAI1C,IAAUxG,EAAKE,MAAM4E,QAAQqE,aAAanJ,EAAKE,MAAMuH,eAAeI,QAAQ,GAD7C,KAF3E,QAMA,2BAAItF,GAAKvC,EAAKH,MAAMuI,MAAMzF,QAAQkC,MAAMJ,OAAOQ,MAA/C,MAAwD,4BACpD9C,MAAO,CAAC+G,MAAO,oBAAqBvI,KAAKT,MAAM+E,OADnD,eA5FL,GACDmE,IAAM9G,YAqGlB+G,G,kDAEF,WAAYxJ,GAAQ,IAAD,8BACf,cAAMA,IAyFVQ,cAAgB,SAAAF,GACZ,EAAK0B,SAAS,CACVyH,eAAgBnJ,EAChBoJ,mBAAmB,EACnBC,SAAS,IAEbC,aAAaC,QAAQ,YAAavJ,EAAGyB,IACrChC,OAAOR,SAASuK,UAjGD,EAqGnBrJ,cAAgB,WACZ,EAAKuB,SAAS,CACV0H,mBAAmB,KAvGR,EA2GnB/I,SAAW,SAAAoJ,GACP,EAAK/H,SAAS,CAAC2H,SAAUI,KA5GV,EAkQnBrJ,aAAe,WACX,EAAKsB,SAAS,CACVgI,aAAa,KApQF,EAyQnBC,qBAAuB,WACnB,EAAKjI,SAAS,CAACkI,cAAc,KA1Qd,EA6QnBC,qBAAuB,SAACC,GACpB,IAAIjK,EAAI,eACDiI,EAAQ,EAAKiC,QAAQrK,MAArBoI,KACPA,EAAKkC,gBAAe,SAACC,EAAKC,GACtB,GAAID,EACIH,GACAA,GAAG,OAFX,CAMA,IAAInF,EAASmD,EAAKqC,cAAc,UAChC,IACI,EAAKC,cAAc,WAAY,GAAI,IAAI/D,IAAU1B,GAAQqE,aAAa5C,IAASiE,SAAS,IAAK,OAAQ,IAAI,SAAU1J,GAC3GA,IACAmH,EAAKwC,cACLzK,EAAK6B,SAAS,CAACkI,cAAc,IAC7BrC,YAAW,WACPf,GAAyB,UAAW,aAAZ,UAA6BpE,GAAKvC,EAAKE,MAAMkI,MAAM9C,MAAMG,IAAzD,OAA8D3E,MACvF,MAEHmJ,GACAA,GAAG,MAGb,MAAOG,GACDA,EACA,IAAQnM,MAAMmM,EAAIvD,SAElB,IAAQ5I,MAAM,4BAA8BmM,EAAIvD,QAAU,KAE1DoD,GACAA,GAAG,SA5SA,EAsTnBS,mBAAqB,WACjB,EAAK7I,SAAS,CAAC8I,YAAY,KAvTZ,EA0TnBC,mBAAqB,SAACX,GAClB,IAAIjK,EAAI,eACDiI,EAAQ,EAAK4C,SAAShL,MAAtBoI,KACPA,EAAKkC,gBAAe,SAACC,EAAKC,GACtB,GAAID,EACIH,GACAA,GAAG,OAFX,CAMA,IAAIa,EAAa7C,EAAKqC,cAAc,cAEhClH,EAAU6E,EAAKqC,cAAc,WAC7BnF,EAAW8C,EAAKqC,cAAc,YAMlC,GAHItK,EAAKE,MAAM6K,WAAW3H,UACtBA,EAAUpD,EAAKE,MAAM6K,WAAW3H,SAEhC,IAAIoD,IAAUsE,GAAYE,WAAW,IAAIxE,IAAU,EAAKtG,MAAMwC,cAAgB,EAC1EuH,GACAA,GAAG,GAEP,IAAQgB,KAAK1I,GAAKvC,EAAKE,MAAMkI,MAAM9C,MAAMC,iBACtC,GAAIqC,WAAWkD,GAAc,GAC5Bb,GACAA,GAAG,GAEP,IAAQgB,KAAK1I,GAAKvC,EAAKE,MAAMkI,MAAM9C,MAAME,gBAEzC,IACI,EAAK+E,cAAc,SAAU,CAACnH,GAAU,IAAIoD,IAAUsE,GAAY3B,aAAa5C,IAASiE,SAAS,IAAK,OAAQrF,GAAU,SAAUrE,GAC1HA,IACAmH,EAAKwC,cACLzK,EAAK6B,SAAS,CAAC8I,YAAY,IAC3BjD,YAAW,WACPf,GAAyB,UAAW,aAAZ,UAA6BpE,GAAKvC,EAAKE,MAAMkI,MAAM9C,MAAMG,IAAzD,OAA8D3E,MACvF,MAEHmJ,GACAA,GAAG,MAGb,MAAOG,GACDA,EACA,IAAQnM,MAAMmM,EAAIvD,SAElB,IAAQ5I,MAAM,4BAA8BmM,EAAIvD,QAAU,KAE1DoD,GACAA,GAAG,SA5WJ,EA8XnBiB,kBAAoB,SAAAhB,GAChB,EAAKW,SAAWX,GA7XhB,EAAKhK,MAAQ,CACTsJ,SAAS,EACTD,mBAAmB,EACnBM,aAAa,EACbc,YAAY,EACZQ,iBAAiB,EACjBC,cAAc,EAEdC,eAAe,EAEf/B,eAAgB,GAChB5G,YAAa,EAEb4I,MAAO,EACPP,WAAY,GAEZ3C,KAAM,SAlBK,E,iEA+Bf,IAAIpI,EAAOW,KACXC,IAAOC,KAAKnB,GAAGb,MAAM,SAAUiC,GACvBA,IACAd,EAAKuL,oBACAvL,EAAKE,MAAMqJ,mBACZ7B,YAAW,WACP1H,EAAKwL,YACLxL,EAAKyL,2BAEN,KAEP7K,IAAO8K,SAAQ,SAAUC,GACrBlC,aAAaC,QAAQ,OAAQiC,EAAKC,UAClC5L,EAAK6B,SAAS,CACVuG,KAAMuD,EAAKC,cAInBC,aAAY,WACR7L,EAAKwL,YACLxL,EAAKyL,yBACDzL,EAAKE,MAAMoJ,eAAe1H,IAC1B5B,EAAK8L,WAAW9L,EAAKE,MAAMoJ,eAAe1H,MAE/C,W,0CAOX,IAAKjB,KAAKT,MAAMoJ,eAAe1H,GAAI,CAC/B,IAAIZ,EAAKyI,aAAasC,QAAQ,aAC1B/K,GACAL,KAAKmL,WAAW9K,GAChBL,KAAKkB,SAAS,CACV2H,SAAS,KAGb7I,KAAKkB,SAAS,CACV0H,mBAAmB,O,oCAQ/B5I,KAAKkB,SAAS,CACVgI,aAAa,IAGjB,IAAImC,EAAS7M,SAAS8M,eAAe,SACrCC,IAAOC,SAASH,EAAQrL,KAAKT,MAAMoJ,eAAelJ,SAAS,SAAUnC,GAC7DA,GAAOO,QAAQP,MAAMA,GACzBO,QAAQC,IAAI,iB,+CA0BhB,IAAIuB,EAAOW,KACXX,EAAKoM,WAAW,gBAAiB,IAAI,SAAUtL,GACvCA,GACAd,EAAK6B,SAAS,CACVwK,iBAAkB,IAAI7F,IAAU1F,EAAK,IAAIwL,UAAU/F,IAASsB,QAAQ,U,iCAOzE7G,GACP,IAAIhB,EAAOW,KACXC,IAAO2L,iBAAiBvL,GAAI,SAAUsI,GAClC,IAAI5G,EAAc,EACD4G,EAAekD,QACrBC,SAAQ,SAAUhL,EAAOiL,GACf,SAAbA,IACAhK,EAAc,IAAI8D,IAAU/E,GAAO6K,UAAU/F,IAASsB,QAAQ,OAItE,IAAIvK,EAAO,IAAIqP,KAAU3L,EAAI,KAAKwJ,WAClClB,EAAc,OAAa,yBAA2BhM,EACtD0C,EAAK6B,SAAS,CACVyH,eAAgBA,EAChB5G,YAAaA,S,kCASrB,IAAI1C,EAAOW,KACDX,EAAKoM,WAAW,UAAW,IAAI,SAAUtL,GAC/C,IAAIqC,EAAS,CACTC,QAAS,GACTwJ,YAAa,GACbC,eAAgB,IAAIrG,IAAU,KAAK8F,UAAU/F,IAASsB,QAAQ,GAC9D/C,OAAQ,IAAI0B,IAAU,KAAK8F,UAAU/F,IAASsB,QAAQ,GACtDiF,aAAc,IAAItG,IAAU,KAAK8F,UAAU/F,IAASsB,QAAQ,GAC5DkF,YAAa,IAAIvG,IAAU,KAAK8F,UAAU/F,IAASsB,QAAQ,GAC3DmF,aAAcC,SAAS,IAAIzG,IAAU,KAAKgE,SAAS,KACnDjH,YAAa0J,SAAS,IAAIzG,IAAU,KAAKgE,SAAS,KAClD/I,MAAO,IAAI+E,IAAU,KAAK8F,UAAU/F,IAASsB,QAAQ,GACrDqF,KAAMD,SAAS,IAAIzG,IAAU,KAAKgE,SAAS,KAC3C2C,QAAQ,GAEZ,GAAY,QAARrM,GACIA,EAAK,CACL,IAAIxD,EAAOwD,EACXqC,EAAS,CACLC,QAAoB,iBAAX9F,EAAK,GAAwB,GAAKA,EAAK,GAChDsP,YAAwB,iBAAXtP,EAAK,GAAwB,GAAKA,EAAK,GACpDuP,eAAgB,IAAIrG,IAAUlJ,EAAK,IAAIgP,UAAU/F,IAASsB,QAAQ,GAClE/C,OAAQ,IAAI0B,IAAUlJ,EAAK,IAAIgP,UAAU/F,IAASsB,QAAQ,GAC1DiF,aAAc,IAAItG,IAAUlJ,EAAK,IAAIgP,UAAU/F,IAASsB,QAAQ,GAChEkF,YAAa,IAAIvG,IAAUlJ,EAAK,IAAIgP,UAAU/F,IAASsB,QAAQ,GAC/DmF,aAAcC,SAAS,IAAIzG,IAAUlJ,EAAK,IAAIkN,SAAS,KACvDjH,YAAa0J,SAAS,IAAIzG,IAAUlJ,EAAK,IAAIkN,SAAS,KACtD/I,MAAO,IAAI+E,IAAUlJ,EAAK,IAAIgP,UAAU/F,IAASsB,QAAQ,GACzDqF,KAAMD,SAAS,IAAIzG,IAAUlJ,EAAK,IAAIkN,SAAS,KAC/C2C,OAAQ7P,EAAK,KAKzB0C,EAAKoM,WAAW,KAAM,IAAI,SAAUhO,GAChC+E,EAAM,GAAgB,iBAAN/E,EAAwB,GAAKA,EAC7C4B,EAAKoM,WAAW,kBAAmB,IAAI,SAAUgB,GAC7CjK,EAAM,gBAAsBiK,EAC5BpN,EAAKoM,WAAW,oBAAqB,IAAI,SAAUiB,GACrB,OAAtBA,IACAA,EAAoB,KAExBlK,EAAM,UAAgB,IAAIqD,IAAU6G,GAAmBf,UAAU/F,IAASsB,QAAQ,GAElFrJ,QAAQC,IAAI,YAAa0E,EAAM,UAAcqH,YAC7CxK,EAAK6B,SAAS,CACVkJ,WAAY5H,kB,iCAYzBjF,EAASoP,EAAMjQ,GAEtB,IAAIkQ,EAAW1K,GAAS0K,SAASrP,EAASoP,GACtCE,EAAa,CACbC,KAAM9M,KAAKT,MAAMoJ,eAAelJ,QAChCsN,GAAIhO,GAAGf,QACPrB,KAAMiQ,GAGV3M,IAAO+M,KAAKH,GAAY,SAAUI,EAAU3P,GACxC,GAAIA,EACAO,QAAQC,IAAI,UAAWR,OACpB,CACH,IAAI6C,EAAM+B,GAASgL,WAAW3P,EAAS0P,GACvCvQ,EAASyD,S,oCAKP5C,EAASoP,EAAM7L,EAAOqM,EAAI3I,EAAU9H,GAC9C,IAEIkQ,EAAW1K,GAAS0K,SAASrP,EAASoP,GACtCS,EAAc,CACdN,KAJO9M,KAIIT,MAAMoJ,eAAe1H,GAChC8L,GAAIhO,GAAGf,QACP8C,MAAO,KAAOA,EACdnE,KAAMiQ,EACNS,UAAW,KAAO,IAAIxH,IAAU,cAAcgE,SAAS,IACvDsD,GAAIA,GAEJG,EAAgB,CAChBR,KAZO9M,KAYIT,MAAMoJ,eAAelJ,QAChCsN,GAAIhO,GAAGf,QACP8C,MAAO,KAAOA,EACdnE,KAAMiQ,EACNS,UAAW,KAAO,IAAIxH,IAAU,cAAcgE,SAAS,IACvDsD,GAAIA,GAGRlN,IAAOsN,YAAYD,GAAe,SAAUE,EAAKlQ,GACzCA,EACA,IAAQA,MAAMA,IAEd8P,EAAW,IAAUI,EACrBvN,IAAOwN,gBAAgBL,GAAa,SAAUjN,GAC1CzD,EAASyD,Y,oCA0IrB,IAAId,EAAOW,KACX,IACIA,KAAK4J,cAAc,sBAAuB,GAAI,IAAK,OAAQ,IAAI,SAAUzJ,GACjEA,EACA6F,GAAyB,UAAW,aAAZ,UAA6BpE,GAAKvC,EAAKE,MAAMkI,MAAM9C,MAAMG,IAAzD,OAA8D3E,IAElFA,EAAI7C,MACJ,IAAQA,MAAM6C,EAAI7C,MAAM4I,SAExB,IAAQ5I,MAAM,4BAA8B6C,EAAM,QAIhE,MAAOsJ,GACDA,EACA,IAAQnM,MAAMmM,EAAIvD,SAElB,IAAQ5I,MAAM,4BAA8BmM,EAAIvD,QAAU,Q,iCAOlE,IAAI7G,EAAOW,KACX,IACIA,KAAK4J,cAAc,kBAAmB,GAAI,IAAK,OAAQ,IAAI,SAAUzJ,GAC7DA,EACA6F,GAAyB,UAAW,aAAZ,UAA6BpE,GAAKvC,EAAKE,MAAMkI,MAAM9C,MAAMG,IAAzD,OAA8D3E,IAElFA,EAAI7C,MACJ,IAAQA,MAAM6C,EAAI7C,MAAM4I,SAExB,IAAQ5I,MAAM,4BAA8B6C,EAAM,QAIhE,MAAOsJ,GACDA,EACA,IAAQnM,MAAMmM,EAAIvD,SAElB,IAAQ5I,MAAM,4BAA8BmM,EAAIvD,QAAU,Q,+BAW5D,IAAD,SACgDlG,KAAKT,MAAnDsJ,EADF,EACEA,QAASD,EADX,EACWA,kBACZ8E,EAFC,EAC8B/E,eACF1H,GAE7BsC,EADOvD,KACaT,MAAM6K,WAAWqC,gBAAkB,IAAI5G,IADpD7F,KACmET,MAAM6K,WAAWqC,gBAAgB,IAAId,UAAU/F,IAASsB,QAAQ,GAAK,EAC/I1D,EAFOxD,KAEgBT,MAAM6K,WAAWqC,gBAAkB,IAAI5G,IAFvD7F,KAEsET,MAAM6K,WAAWqC,gBAAgB,IAAId,UAAU/F,IAASsB,QAAQ,GAAK,EAClJzD,EAHOzD,KAGeT,MAAM6K,WAAWqC,gBAAkB,IAAI5G,IAHtD7F,KAGqET,MAAM6K,WAAWqC,gBAAgB,IAAId,UAAU/F,IAASsB,QAAQ,GAAK,EACjJxD,EAJO1D,KAIUT,MAAM6K,WAAWqC,gBAAkB,IAAI5G,IAJjD7F,KAIgET,MAAM6K,WAAWqC,gBAAgB,IAAId,UAAU/F,IAASsB,QAAQ,GAAK,EAE5IyG,EANO3N,KAMgBT,MAAM6K,WAAWqC,gBANjCzM,KAMwDT,MAAM6K,WAAWqC,gBAAgB,GAAK,EAEnGmB,EAAe,CACjB,CACIC,EAAGjM,GAAK5B,KAAKT,MAAMkI,MAAMzF,QAAQb,MAAMoC,aACvCuK,EAAG7G,WAAW1D,IAElB,CACIsK,EAAGjM,GAAK5B,KAAKT,MAAMkI,MAAMzF,QAAQb,MAAMqC,gBACvCsK,EAAG7G,WAAWzD,IAElB,CACIqK,EAAGjM,GAAK5B,KAAKT,MAAMkI,MAAMzF,QAAQb,MAAMsC,eACvCqK,EAAG7G,WAAWxD,IAElB,CACIoK,EAAGjM,GAAK5B,KAAKT,MAAMkI,MAAMzF,QAAQb,MAAMuC,UACvCoK,EAAG7G,WAAWvD,KAKhBqK,EAAY9G,WAAW1D,GAAgB,GAAK0D,WAAWzD,GAAmB,GAAKyD,WAAWxD,GAAkB,GAAKwD,WAAWvD,GAAa,EAEzIsK,EAAYC,KACdlL,EAAiB/C,KAAKT,MAAMmM,iBAAmB,IAAI7F,IAAU7F,KAAKT,MAAMmM,kBAAkBC,UAAU,IAAIzE,QAAQ,GAAK,IACrHgH,EAAgB,EAEpB,GADArQ,QAAQC,IAAI,sCAAuCkC,KAAKT,MAAM6K,WAAW+B,cACrEnM,KAAKT,MAAM6K,WAAW+B,cAAgBlF,WAAWjH,KAAKT,MAAM6K,WAAW+B,cAAgB,EAAG,CAC1F,IAAIgC,EAAIlH,WAAWjH,KAAKT,MAAM6K,WAAW+B,cACrCiC,EAAI,IAAIvI,IAAU7F,KAAKT,MAAM6K,WAAWjG,QAAQqE,aAAaxI,KAAKT,MAAM6K,WAAWxH,aAAaiH,SAAS,IAC7GqE,GAAqB,IAAJC,EAAUlH,WAAWmH,IAAIlH,QAAQ,GAKtD,IAAImH,EAAgBC,KAAKC,KAAwB,IAAlBZ,EAAD,OAA6CM,KAAa,IACxF,OACI,yBAAKO,UAAU,MAAMhN,MAAO,CAACiN,UAAW,QACpC,yBAAKD,UAAU,YACX,yBAAKE,IAAKC,KAAMlN,MAAO,UAE3B,yBAAK+M,UAAU,aACX,yBAAKA,UAAU,aACX,yBAAKhN,MAAO,CACRoN,SAAU,OACVC,OAAQ,MACRtG,MAAO,SACP3G,GAAK5B,KAAKT,MAAMkI,MAAMzF,QAAQb,MAAMc,MACxC,yBAAKuM,UAAW,cACZ,2BACI,uBAAKM,KAAM,IAEP,sBAAMnH,KAAKoH,KAAX,CACI5N,MACI,+BAAQuM,EAAcA,EAAYpN,MAAM,EAAG,IAAM,MAAMoN,EAAYpN,OAAO,IAAM,GAAIN,KAAKT,MAAM6K,WAAWoC,OACtG,uBAAKjE,MAAM,QAAX,OAA8B,IAEtClC,YAAa,uBAAM2I,MAAO,EACPlO,MAAOd,KAAKT,MAAM6K,WAAWmC,KAAOvM,KAAKT,MAAM6K,WAAWmC,KAAO,EACjExE,UAAQ,OAMnC,uBAAK+G,KAAM,EAAGtN,MAAO,CAACyN,UAAW,WAC7B,uBAAQhJ,KAAM,UACNiJ,QAAS,WACL,EAAKhO,SAAS,CACV0H,mBAAmB,MAEvBhH,GAAK5B,KAAKT,MAAMkI,MAAMzF,QAAQb,MAAMgB,SAGxD,2BACI,uBAAGX,MAAO,CAACyN,UAAW,SAAUR,UAAW,MAAOlG,MAAO,OAAOqG,SAAU,SACrE5O,KAAKT,MAAMwC,YADhB,UAIJ,uBAAGP,MAAO,CAACyN,UAAW,WAClB,uBAAQhJ,KAAM,UAAWiJ,QAAS,kBAAM,EAAKhG,gBAA7C,mBAIZ,yBAAKsF,UAAW,eACZ,yBAAKA,UAAW,eACZ,yBAAKA,UAAU,cACX,wBAAIhN,MAAO,CACPyN,UAAW,SACXL,SAAU,OACVrG,MAAO,OACPkG,UAAW,SACX7M,GAAK5B,KAAKT,MAAMkI,MAAMzF,QAAQb,MAAMe,UACxC,4BACA,6BACI,2BACI,uBAAK4M,KAAM,IAAI,0BACXN,UAAW,SAAU5M,GAAK5B,KAAKT,MAAMkI,MAAMzF,QAAQb,MAAMiB,eAD9C,IAC+D,IAAIyD,IAAU7F,KAAKT,MAAM6K,WAAWjG,OAASnE,KAAKT,MAAM6K,WAAWjG,OAAS,GAAGqE,aAAaxI,KAAKT,MAAM6K,WAAWxH,YAAc5C,KAAKT,MAAM6K,WAAWxH,YAAc,GAAGsE,QAAQ,KAC7P,uBAAK4H,KAAM,EAAGtN,MAAO,CAACyN,UAAW,WAG7B,uBAAQzN,MAAO,CAAC2N,MAAM,QACdlJ,KAAM,UAAWiJ,QAAS,WAC9B,EAAKhO,SAAS,CAAC8I,YAAY,MAC3BpI,GAAK5B,KAAKT,MAAMkI,MAAMzF,QAAQ4B,OAAOE,UAGjD,4BACA,2BACI,uBAAKgL,KAAM,IAAI,0BACXN,UAAW,SAAU5M,GAAK5B,KAAKT,MAAMkI,MAAMzF,QAAQb,MAAMmB,aAD9C,IAC6DtC,KAAKT,MAAM6K,WAAWgF,YAClG,uBAAKN,KAAM,EAAGtN,MAAO,CAACyN,UAAW,WAEzBZ,EACI,kBAACtI,GAAD,CAAWvE,MAAO,CAACiN,UAAW,IAAKtN,MAAM,GAAGkO,OAAO,WACxCvO,MAAOmG,WAAW+G,GAAYsB,SAAU,WAC/C,EAAKzE,eACF,uBAAQrJ,MAAO,CAACiN,UAAW,IAAKxI,KAAK,UAC7B8B,SAAUsG,EAAea,QAAS,WAC7C,EAAKK,gBACL3N,GAAK5B,KAAKT,MAAMkI,MAAMzF,QAAQ4B,OAAOG,WAIzD,4BACA,2BACI,uBAAK+K,KAAM,IAAI,0BACXN,UAAW,SAAU5M,GAAK5B,KAAKT,MAAMkI,MAAMzF,QAAQb,MAAMoB,SAD9C,IACyD,IAAIsD,IAAU7F,KAAKT,MAAM6K,WAAWtJ,MAAQd,KAAKT,MAAM6K,WAAWtJ,MAAQ,GAAGoG,QAAQ,KAC7J,uBAAK4H,KAAM,EAAGtN,MAAO,CAACyN,UAAW,WAC7B,uBAAQzN,MAAO,CAACiN,UAAW,GAAIU,MAAM,QAC7BpH,SAAU,IAAIlC,IAAU7F,KAAKT,MAAM6K,WAAWtJ,MAAQd,KAAKT,MAAM6K,WAAWtJ,MAAQ,GAAGuJ,WAAW,GAAK,EACvGpE,KAAK,UAAUiJ,QAAS,WAC5B,EAAK3M,aACLX,GAAK5B,KAAKT,MAAMkI,MAAMzF,QAAQ4B,OAAOrB,aAIrD,6BAEQwL,EACI,uBAAKvM,MAAO,CAACyN,UAAW,WACpB,uBAAKH,KAAM,GAAItN,MAAO,CAACyN,UAAW,WAC9B,6BACKf,EAAgB,EAAI,kBAAC,YAAD,CAAWsB,OAAQ,IACRrO,MAAOS,GAAK5B,KAAKT,MAAMkI,MAAMzF,QAAQb,MAAM2B,YAC3C2M,QAASvB,IACrC,kBAAC,YAAD,CAAWsB,OAAQ,IACRrO,MAAOS,GAAK5B,KAAKT,MAAMkI,MAAMzF,QAAQb,MAAM2B,YAC3C2M,QAAS,MAGhC,uBAAKX,KAAM,GAAItN,MAAO,CAACyN,UAAW,SAC9B,kBAAC,MAAD,CACIS,WAAS,EACTC,SAAO,EACPxO,MAAOS,GAAK5B,KAAKT,MAAMkI,MAAMzF,QAAQb,MAAM2B,YAC3C8M,SAAUhO,GAAK5B,KAAKT,MAAMkI,MAAMzF,QAAQb,MAAM2B,YAC9CwB,MAAO,kBACH,0BACIuL,wBAAyB,CACrBC,OAAQlC,EAAamC,QAAO,SAACC,EAAKC,GAAN,OAAcA,EAAInC,EAAIkC,IAAK,OAInErT,KAAMiR,EACNsC,YAAa,SAAAC,GAAG,OAAI,0BAChBN,wBAAyB,CAACC,OAAQK,MACtCX,OAAQ,QAGX,IAGrB,uBAASY,QAAQ,IACjB,uBAAK5O,MAAO,CAACyN,UAAW,WACpB,uBAAKH,KAAM,IACP,uBAAW3N,MAAOS,GAAK5B,KAAKT,MAAMkI,MAAMzF,QAAQb,MAAM4B,eAC3CjC,MAAOiC,EAAgBmF,UAAW,KAEjD,uBAAK4G,KAAM,IACP,uBAAW3N,MAAOS,GAAK5B,KAAKT,MAAMkI,MAAMzF,QAAQb,MAAMkB,UAC3CvB,MAAOd,KAAKT,MAAM6K,WAAWgF,WAAanI,WAAWlE,GAAkB,EAAI,IAAI8C,IAAU7F,KAAKT,MAAM6K,WAAWgF,WAAW5G,aAAa,KAAKmD,UAAU5I,GAAgBmE,QAAQ,GAAK,IACnLmJ,OAAQ,QAI3B,uBAAK7O,MAAO,CAACyN,UAAW,WACpB,4BACA,uBAAKH,KAAM,IACP,uBAAW3N,MAAOS,GAAK5B,KAAKT,MAAMkI,MAAMzF,QAAQb,MAAMkC,UAC3CvC,MAAOd,KAAKT,MAAM6K,WAAW8B,eAAgBhE,UAAW,KAEvE,uBAAK4G,KAAM,IACP,uBAAW3N,MAAOS,GAAK5B,KAAKT,MAAMkI,MAAMzF,QAAQb,MAAMmC,eAC3CxC,MAAO,IAAI+E,IAAU7F,KAAKT,MAAM6K,WAAWgC,aAAakE,MAAM,IAAIzK,IAAU7F,KAAKT,MAAM6K,WAAW8B,iBAAiBhF,QAAQ,GAC3HgB,UAAW,SAQ1C,yBAAKsG,UAAU,qBACX,uBAAU3F,QAASA,GACf,uBACI1H,MAAO,wBAAIK,MAAO,CAAC+G,MAAO,SAAU3G,GAAK5B,KAAKT,MAAMkI,MAAM3F,QAAQX,QAClE,sBAAcwG,KAAd,CAAmBC,MAAOhG,GAAK5B,KAAKT,MAAMkI,MAAM3F,QAAQ1D,iBACpD,+BAAQW,GAAGf,WAInB,uBAASoS,QAAQ,IACjB,uBAAcjP,MAAO,wBACjBK,MAAO,CAAC+G,MAAO,SAAU3G,GAAK5B,KAAKT,MAAMkI,MAAMzF,QAAQb,MAAMgC,eAC7D,sBAAcwE,KAAd,CACIC,MAAOhG,GAAK5B,KAAKT,MAAMkI,MAAMzF,QAAQb,MAAM1D,IAAKuC,KAAKT,MAAM6K,WAAW3M,IAC1E,sBAAckK,KAAd,CACIC,MAAOhG,GAAK5B,KAAKT,MAAMkI,MAAMzF,QAAQb,MAAMsB,SAAUzC,KAAKT,MAAM6K,WAAW3H,SAC/E,sBAAckF,KAAd,CACIC,MAAOhG,GAAK5B,KAAKT,MAAMkI,MAAMzF,QAAQb,MAAMuB,QAAS1C,KAAKT,MAAM6K,WAAW6B,aAC9E,sBAActE,KAAd,CACIC,MAAOhG,GAAK5B,KAAKT,MAAMkI,MAAMzF,QAAQb,MAAMwB,aAAc3C,KAAKT,MAAM6K,WAAWjG,QACnF,sBAAcwD,KAAd,CACIC,MAAOhG,GAAK5B,KAAKT,MAAMkI,MAAMzF,QAAQb,MAAMyB,aAAc5C,KAAKT,MAAM6K,WAAWxH,aACnF,sBAAc+E,KAAd,CACIC,MAAOhG,GAAK5B,KAAKT,MAAMkI,MAAMzF,QAAQb,MAAM0B,YAqH/E,SAAwB0N,GACpB,GAAIA,GAAiBA,EAAgB,EAAG,CACpC,IAAIC,EAAQ,IAAIC,KAAqB,IAAhBF,GACrB,OAAOG,GAAWF,EAAMG,WAAa,GAAK,IAAMD,GAAWF,EAAMI,WAAa,IAAMF,GAAWF,EAAMK,YAAc,IAAMH,GAAWF,EAAMM,cAE9I,MAAO,GA1HiFC,CAAepD,QAK3F,yBAAKa,UAAU,YACX,oFAGJ,kBAAC,EAAD,CAAepN,QAASwH,EAAmBlJ,cAAeM,KAAKN,cAChDC,cAAeK,KAAKL,gBAEnC,uBACIwB,MAAOS,GAAK5B,KAAKT,MAAMkI,MAAMzF,QAAQkC,MAAML,QAAQ1C,MACnDC,QAASpB,KAAKT,MAAM2J,YACpB5H,SAAUtB,KAAKJ,aACfoR,OAAQ,KACRC,cAAc,GAEd,yBAAKzP,MAAO,CAACyN,UAAW,WACpB,4BAAQxR,GAAG,UACX,uBAAG+D,MAAO,CAAC8E,UAAW,SAAUC,WAAY,WAAYC,SAAU,eAC9D,+BAAQxG,KAAKT,MAAMoJ,eAAelJ,UACtC,uBAAQ+O,UAAU,UAAUvI,KAAK,UAAUiJ,QAAS,WAChDjL,IAAK,EAAK1E,MAAMoJ,eAAelJ,SAC/B,IAAQyR,QAAQ,oCAChBtP,GAAK5B,KAAKT,MAAMkI,MAAMzF,QAAQkC,MAAML,QAAQI,QAKxD,kBAACyC,GAAD,CACIyK,oBAAqBnR,KAAKuK,kBAC1BnJ,QAASpB,KAAKT,MAAMyK,WACpB1I,SAAUtB,KAAK+J,mBACf1C,SAAUrH,KAAKiK,mBACf9C,KAAMnH,KAAKT,MAAMwC,YACjBqP,MAAOpR,KAAKT,MAAM6K,WAAWiH,cAE7B5J,KAAMzH,KAAKT,MAAMkI,KACjBT,MAAOhH,KAAKT,MAAM6K,WAAWxH,YAC7BH,QAASzC,KAAKT,MAAM6K,WAAW3H,e,GAhtBzBd,aAoyB1B,SAASsM,KACL,IAUIqD,GAVI,IAAIb,MAUCc,UAAY,IAEzB,OADAD,GAAcA,EAAI,IAItB,SAASZ,GAAWjQ,GAEhB,OADAA,EAAIA,EAAI,GAAK,IAAMA,EAAIA,EAIZ+Q,O,kDA9FX,aAAe,IAAD,8BACV,gBAyBJC,aAAe,SAAArS,GACX,IAAMsS,EAActS,EAAEuS,OAAO7Q,MAC7B,EAAKI,SAAS,CAAC0Q,OAAQF,IACI,OAAvBA,EAAYE,OACZ9I,aAAaC,QAAQ,OAAQ,SACC,UAAvB2I,EAAYE,QACnB9I,aAAaC,QAAQ,OAAQ,UA9BjC,EAAKxJ,MAAQ,CACTqS,OAAQC,KAHF,E,iEAQV,IAAIpK,EAAOqB,aAAasC,QAAQ,QAC5BwG,EAASC,IACTpK,EACa,UAATA,EACAmK,EAASC,IACO,UAATpK,IACPmK,EAASE,MAGbF,EAASC,IACT/I,aAAaC,QAAQ,OAAQ,UAGjC/I,KAAKkB,SAAS,CACV0Q,OAAQA,M,+BAcN,IACCA,EAAU5R,KAAKT,MAAfqS,OACP,OACI,yBAAKpD,UAAU,MAAMhN,MAAO,CAACgO,OAAQhR,SAASuT,gBAAgBC,eAC1D,uBAAQxD,UAAU,UAed,uBAAgBoD,OAAQA,GACpB,kBAAC,GAAD,CAAa7Q,IAAK6Q,EAASA,EAAOA,OAAS,QAE/C,kBAACrM,GAAD,CAAQ/D,MAAO,CAACyN,UAAW,kB,GA3D7BtN,aCh3BEsQ,QACW,cAA7BhT,OAAOR,SAASyT,UAEe,UAA7BjT,OAAOR,SAASyT,UAEhBjT,OAAOR,SAASyT,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,GAAD,MAAS7T,SAAS8M,eAAe,SD2H3C,kBAAmBgH,WACrBA,UAAUC,cAAcC,MAAMrV,MAAK,SAAAsV,GACjCA,EAAaC,kB","file":"static/js/main.5d888dd9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/head.cfed5fd0.png\";","import axios from 'axios';\n\nlet host = \"http://127.0.0.1:2345/\";\n\nclass Axios {\n\n    post(api, bizData, pageData, callback) {\n        let data = {\n            base: {\n                timestamp: 1234567,\n                sign: \"67ff54447b89f06fe4408b89902e585167abad291ec41118167017925e24e320\",\n            },\n            biz: bizData,\n            page: pageData,\n        }\n        axios.post(host + api, data).then(function (response) {\n            let data = response.data\n            if (callback) {\n                callback(data);\n            }\n        }).catch(function (error) {\n\n        })\n    }\n\n    postSeroRpc(_method, _params, callback) {\n        let data = {\n            id: 0,\n            jsonrpc: \"2.0\",\n            method: _method,\n            params: _params,\n        };\n        axios.post(host + \"rpc\", data).then(function (response) {\n            let data = response.data\n            if (callback) {\n                callback(data);\n            }\n        }).catch(function (error) {\n            console.log(\"req error: \",error)\n        })\n    }\n\n    postPullupRpc(_method, _params, callback) {\n        let data = {\n            id: 0,\n            method: _method,\n            params: _params,\n        };\n        axios.post(host + \"pullup_rpc\", data).then(function (response) {\n            let data = response.data\n            if (callback) {\n                callback(data);\n            }\n        }).catch(function (error) {\n\n        })\n    }\n\n}\n\nexport default Axios;","class Contract{\n\n    address = \"4UAuAi11MuJBxTn2EUHmMSxCLxy7gmVuQPukadm7eSeaf6ki3LgSbAscAusJUpRvRZAsBJJc7J9rM6mJwLFp2bJ8\";\n\n    abi = [{\"constant\":false,\"inputs\":[{\"name\":\"refereeCode\",\"type\":\"string\"}],\"name\":\"invest\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"detailsOfIncome\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"triggerStaticProfit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"setMarketAddr\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"details\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint8\"},{\"name\":\"\",\"type\":\"bool\"},{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdrawBalance\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"registerNode\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"calcuStaticProfit\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"id\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"balanceOfSero\",\"outputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"code\",\"type\":\"string\"}],\"name\":\"codeExist\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_triggerStaticNum\",\"type\":\"uint256\"}],\"name\":\"setTriggerStaticNum\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_marketAddr\",\"type\":\"address\"},{\"name\":\"_codeServiceAddr\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}]\n\n    dapp = {\n        name: \"add\",\n        contractAddress: \"4UAuAi11MuJBxTn2EUHmMSxCLxy7gmVuQPukadm7eSeaf6ki3LgSbAscAusJUpRvRZAsBJJc7J9rM6mJwLFp2bJ8\",\n        github: \"https://github.com/add-plus/\",\n        author: \"add-plus\",\n        url: document.location.href,\n        logo: document.location.protocol + '//' + document.location.host + '/add/logo.png'\n    };\n}\n\nexport default Contract","import React, {Component} from 'react'\nimport {Modal, Select} from \"antd\";\nimport Axios from \"../server\";\n// import Pullup from \"pullup-js-sdk\";\nimport seropp from 'sero-pp'\nimport Contract from \"./contract\";\n\nlet tmpPkr = '';\nlet ajax = new Axios();\nconst {Option} = Select;\n\nlet ct = new Contract();\n// var pullup = new Pullup();\n// pullup.setProvider(new pullup.providers.HttpProvider('http://127.0.0.1:2345'));\nlet host = window.location.host;\n\n\n\nclass SelectAccount extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            accountOptions: [],\n            accounts: [],\n        }\n    }\n\n\n    componentDidMount() {\n        let that = this;\n        seropp.init(ct.dapp, function (res) {\n            if(res){\n                that.getAccounts();\n            }\n        });\n\n    }\n\n    handleOk = e => {\n        let that = this;\n        if (tmpPkr !== '') {\n            let accounts = that.state.accounts;\n            for (let ac of accounts) {\n                if (ac.MainPKr === tmpPkr) {\n                    that.props.selectAccount(ac);\n                }\n            }\n        }\n        that.props.hiddenAccount();\n    };\n\n    handleCancel = e => {\n        let that = this;\n        that.props.hiddenAccount();\n    };\n\n    onChange = (v) => {\n        tmpPkr = v;\n    }\n\n    formatPK(pk) {\n        return pk.slice(0, 10) + \"....\" + pk.slice(-10)\n    }\n\n    getAccounts() {\n        let that = this;\n        // let res = pullup.local.accountList()\n        seropp.getAccountList(function (res) {\n            if (res) {\n                let dataArray = res;\n                let i = 0;\n                let tmpArr = [];\n                for (let ac of dataArray) {\n                    let acName = ac.Name;\n                    i++;\n                    if (!acName) {\n                        acName = \"Account\" + i;\n                    }\n                    tmpArr.push(<Option value={ac.MainPKr} key={i}>{acName + \" \" + that.formatPK(ac.PK)}</Option>)\n                }\n                that.setState({\n                    accountOptions: tmpArr,\n                    accounts: dataArray\n                })\n            }\n        });\n    };\n\n    render() {\n        return (\n            <Modal\n                title=\"Select Account\"\n                visible={this.props.visible}\n                onOk={this.handleOk}\n                onCancel={this.handleCancel}\n            >\n                <Select showSearch\n                        style={{width: '98%'}}\n                        placeholder=\"Select an account\"\n                        onChange={(v) => {\n                            this.onChange(v);\n                        }}\n                >\n                    {this.state.accountOptions}\n                </Select>\n            </Modal>\n        )\n    }\n}\n\n\nexport default SelectAccount","class Lang {\n\n    zh_CN = {\n        project: {\n            title: \"合约详情\",\n            contractAddress: \"合约地址\",\n            balanceSero: \"当前余额 (SERO)\",\n        },\n\n        account: {\n            title: {\n                utxo: \"钱包账户\",\n                contract: \"合约账户\",\n                swith: \"切换账户\",\n                balanceSero: \"余额 (SERO)\",\n                estimatedTotal: \"预计总收益 (SERO)\",\n                dayIncome: \"当天返还比例\",\n                staticIncome: \"当天静态返还 (SERO)\",\n                withdraw: \"可提现金额 (SERO)\",\n                detail: \"详情\",\n                id: \"编号\",\n                referId: \"推荐人编号\",\n                areaId: \"大区编号\",\n                totalInvest: \"本金\",\n                profitLevel: \"收益倍数\",\n                latestTime: \"最新收益时间\",\n                totalReturn: \"当前返还总数(SERO)\",\n                totalReturnDay: \"当天返还总数(SERO)\",\n                recommend: \"下级人数\",\n                staticIncomeTips: \"今天的静态收益已经支付到可提现账户.\",\n                staticIncomeTips2: \"触发收益到提现账户.\",\n                investDetail: \"投资详情\",\n                myIncome: \"我的业绩\",\n                areaTotal: \"大区业绩\",\n                areaOtherTotal: \"业绩总和(不含大区)\",\n\n                staticReward: \"静态返还\",\n                recommendReward: \"推荐奖\",\n                nobilityReward: \"星级奖\",\n                vipReward: \"VIP奖\",\n                viewCode: \"查看智能合约\",\n\n            },\n            button: {\n                deposit: \"充值\",\n                invest: \"投资\",\n                trigger: \"触发收益\",\n                withdraw: \"提现\",\n                close: \"关闭\",\n                copy: \"拷贝\",\n            },\n            modal: {\n                deposit: {\n                    title: \"充值\",\n                    copy: \"拷贝\",\n                },\n\n                invest: {\n                    title: \"投资\",\n                    referId: \"推荐人编号\",\n                    amount: \"投资金额\",\n                    amountTips: \"10 SERO起投\",\n                    availableSERO: \"可用的余额\",\n                    total: \"应付合计\",\n                    estimate: \"预计收益\",\n                    password: \"账户密码\",\n                    passwordPlace: \"输入账户密码\",\n                },\n\n                trigger: {\n                    password: \"账户密码\",\n                    passwordPlace: \"输入账户密码\",\n                },\n\n                withdraw: {\n                    password: \"账户密码\",\n                    passwordPlace: \"输入账户密码\",\n                    tips: \"* 提现金额将直接提到UTXO账户.\",\n                },\n            },\n        },\n        toast: {\n            lessAmount: \"SERO余额不足以支付本次交易.\",\n            minInvest: \"最小投资金额为 10 SERO.\",\n            tx: \"交易提交成功, 等待区块打包交易, 交易哈希: \",\n            copySuccess: \"拷贝成功! \",\n\n        }\n    };\n\n    en_US = {\n        project: {\n            title: \"Contract Info\",\n            contractAddress: \"Contract Address\",\n            balanceSero: \"Current Balance (SERO)\",\n        },\n\n        account: {\n            title: {\n                utxo: \"Wallet Account\",\n                contract: \"Contract Account\",\n                swith: \"Switch Account\",\n                balanceSero: \"Balance (SERO)\",\n                estimatedTotal: \"Estimated Total Income (SERO)\",\n                dayIncome: \"Return rate on the day\",\n                staticIncome: \"Static Return (SERO)\",\n                withdraw: \"Withdrawal Account (SERO)\",\n                detail: \"Detail\",\n                id: \"ID\",\n                referId: \"Refer ID\",\n                areaId: \"Large Area ID\",\n                totalInvest: \"Total Invest\",\n                profitLevel: \"Profit Level\",\n                latestTime: \"Latest Share Time\",\n                totalReturn: \"Total Return\",\n                totalReturnDay: \"Total return on the day (SERO)\",\n                recommend: \"Recommend Number\",\n                staticIncomeTips: \"Your income have been paid to the withdrawal account.\",\n                staticIncomeTips2: \"Trigger to withdrawal account. \",\n                investDetail: \"Invest Info\",\n                myIncome: \"My performance\",\n                areaTotal: \"Regional performance\",\n                areaOtherTotal: \"Total performance (excluding the large region)\",\n\n                staticReward: \"Static\",\n                recommendReward: \"Recommend\",\n                nobilityReward: \"Nobility\",\n                vipReward: \"VIP\",\n                viewCode: \"View Smart Contract\",\n            },\n            button: {\n                deposit: \"Deposit SERO\",\n                invest: \"Invest\",\n                trigger: \"Trigger Income\",\n                withdraw: \"Withdraw\",\n                close: \"Close\",\n                copy: \"Copy\",\n            },\n            modal: {\n                deposit: {\n                    title: \"Deposit\",\n                    copy: \"COPY\",\n                },\n\n                invest: {\n                    title: \"Invest\",\n                    referId: \"Refer ID\",\n                    ticket: \"Tickets\",\n                    amount: \"Invet Amount\",\n                    amountTips: \"At least invest 10 SERO\",\n                    availableSERO: \"Available Blance\",\n                    availableExchange: \"Max Exchange\",\n                    total: \"Total\",\n                    estimate: \"Estimated Return\",\n                    password: \"Password\",\n                },\n\n                trigger: {\n                    password: \"Password\",\n                },\n\n                withdraw: {\n                    password: \"Password\",\n                    tips: \"* This is the withdrawal of the amount to the UTXO account.\",\n                },\n            },\n        },\n        toast: {\n            lessAmount: \"The balance is not enough to pay for this transaction.\",\n            minInvest: \"Invest Amount at least 10 SERO.\",\n            tx: \"The transaction was submitted successfully, waiting for the block to be packaged, and the transaction hash: \",\n            copySuccess: \"Copy to clipboard successfully! \",\n        },\n    }\n\n    be_BY = {\n        project: {\n            title: \"Детали контракта\",\n            contractAddress: \"Адрес контракта\",\n            balanceSero: \"Текущий баланс (SERO)\",\n        },\n\n        account: {\n            title: {\n                utxo: \"Счет кошелька\",\n                contract: \"Контокоррентный счет\",\n                swith: \"Сменить аккаунт\",\n                balanceSero: \"Баланс (SERO)\",\n                estimatedTotal: \"Расчетный общий доход (SERO)\",\n                dayIncome: \"День Доход\",\n                staticIncome: \"Фиксированный доход дня (SERO)\",\n                withdraw: \"Доступен вывод средств (SERO)\",\n                detail: \"подробности\",\n                id: \"Число\",\n                referId: \"Идентификатор реферера\",\n                areaId: \"ID региона\",\n                totalInvest: \"Основная сумма\",\n                profitLevel: \"Многократный доход\",\n                latestTime: \"Время последнего дохода\",\n                totalReturn: \"Всего текущих возвратов (SERO)\",\n                totalReturnDay: \"Всего возвращено в день (SERO)\",\n                recommend: \"Количество рефералов\",\n                staticIncomeTips: \"Сегодняшний фиксированный доход выплачивается на счет снятия\",\n                staticIncomeTips2: \"Триггер доход на счет вывода\",\n                investDetail: \"Детали инвестирования\",\n                myIncome: \"Мое выступление\",\n                areaTotal: \"Региональный спектакль\",\n                areaOtherTotal: \"Общий доход (кроме региональных)\",\n\n                staticReward: \"Фиксированный доход\",\n                recommendReward: \"реферальные вознаграждения\",\n                nobilityReward: \"Звездная награда\",\n                vipReward: \"VIP Награда\",\n                viewCode: \"Посмотреть смарт-контракт\",\n\n            },\n            button: {\n                deposit: \"депозит\",\n                invest: \"инвестиции\",\n                trigger: \"Триггер доход\",\n                withdraw: \"Снять со счета\",\n                close: \"близко\",\n                copy: \"копия\",\n            },\n            modal: {\n                deposit: {\n                    title: \"депозит\",\n                    copy: \"копия\",\n                },\n\n                invest: {\n                    title: \"инвестиции\",\n                    referId: \"Идентификатор реферера\",\n                    amount: \"Сумма инвестиций\",\n                    amountTips: \"Начинает кастовать 10 SERO\",\n                    availableSERO: \"доступные средства\",\n                    total: \"Всего к оплате\",\n                    estimate: \"Расчетный доход\",\n                    password: \"Пароль от аккаунта\",\n                    passwordPlace: \"Введите пароль учетной записи\",\n                },\n\n                trigger: {\n                    password: \"Пароль от аккаунта\",\n                    passwordPlace: \"Введите пароль учетной записи\",\n                },\n\n                withdraw: {\n                    password: \"Пароль от аккаунта\",\n                    passwordPlace: \"Введите пароль учетной записи\",\n                    tips: \"* Вывод средств будет производиться непосредственно на счет UTXO.\",\n                },\n            },\n        },\n        toast: {\n            lessAmount: \"Баланса SERO недостаточно для покрытия этой транзакции.\",\n            minInvest: \"Минимальная сумма инвестиций составляет 10 SERO.\",\n            tx: \"Предоставление транзакции успешный, ожидание транзакции блока упаковки, хэш транзакции: \",\n            copySuccess: \"Успешно скопировано\",\n\n        }\n    };\n\n    ko_KR = {\n        project: {\n            title: \"계약세부\",\n            contractAddress: \"계약 주소\",\n            balanceSero: \"현재 잔액 (SERO)\",\n        },\n\n        account: {\n            title: {\n                utxo: \"월렛 계정\",\n                contract: \"계약 계정\",\n                swith: \"계정 변경\",\n                balanceSero: \"밸런스 (SERO)\",\n                estimatedTotal: \"총 예상 수익 (SERO)\",\n                dayIncome: \"당일 수익률\",\n                staticIncome: \"고정 수입 (SERO)\",\n                withdraw: \"출금 금액 가능 (SERO)\",\n                detail: \"세부\",\n                id: \"번호\",\n                referId: \"리퍼러 ID\",\n                areaId: \"지역 ID\",\n                totalInvest: \"교장\",\n                profitLevel: \"여러 수입\",\n                latestTime: \"마지막 소득 시간\",\n                totalReturn: \"총 전류 리턴 (SERO)\",\n                totalReturnDay: \"하루에 반환 된 총액 (SERO)\",\n                recommend: \"부하 직원 수\",\n                staticIncomeTips: \"인출 계좌로 지급되는 오늘의 고정 수입\",\n                staticIncomeTips2: \"인출 계좌로 수입 트리거\",\n                investDetail: \"투자세부\",\n                myIncome: \"내 공연\",\n                areaTotal: \"지역 성과\",\n                areaOtherTotal: \"총 실적 (지역 제외)\",\n\n                staticReward: \"고정 수입\",\n                recommendReward: \"추천 보상\",\n                nobilityReward: \"별 보상\",\n                vipReward: \"VIP 보상\",\n                viewCode: \"스마트 계약서보기\",\n\n            },\n            button: {\n                deposit: \"예금\",\n                invest: \"투자\",\n                trigger: \"트리거 수익\",\n                withdraw: \"철수\",\n                close: \"닫기\",\n                copy: \"복사\",\n            },\n            modal: {\n                deposit: {\n                    title: \"예금\",\n                    copy: \"복사\",\n                },\n\n                invest: {\n                    title: \"투자\",\n                    referId: \"리퍼러 ID\",\n                    amount: \"투자 금액\",\n                    amountTips: \"10 SERO 시작\",\n                    availableSERO: \"사용 가능한 잔액\",\n                    total: \"총 지불\",\n                    estimate: \"추정 소득\",\n                    password: \"계정 암호\",\n                    passwordPlace: \"계정 비밀번호 입력\",\n                },\n\n                trigger: {\n                    password: \"계정 암호\",\n                    passwordPlace: \"계정 비밀번호 입력\",\n                },\n\n                withdraw: {\n                    password: \"계정 암호\",\n                    passwordPlace: \"계정 비밀번호 입력\",\n                    tips: \"* 출금은 UTXO 계정으로 직접 이루어집니다.\",\n                },\n            },\n        },\n        toast: {\n            lessAmount: \"이 거래를 처리하기에 SERO 잔액이 부족합니다.\",\n            minInvest: \"최소 투자 금액은 10 SERO입니다.\",\n            tx: \"트랜잭션 제출 완료, 블록 패키징 트랜잭션 대기 중, 트랜잭션 해시 : \",\n            copySuccess: \"성공적으로 복사\",\n\n        }\n    };\n\n    ja_JP = {\n        project: {\n            title: \"契約詳細\",\n            contractAddress: \"契約住所\",\n            balanceSero: \"現在の残高（SERO）\",\n        },\n\n        account: {\n            title: {\n                utxo: \"ウォレットアカウント\",\n                contract: \"契約アカウント\",\n                swith: \"アカウントを切り替える\",\n                balanceSero: \"バランス（SERO）\",\n                estimatedTotal: \"推定総収益（SERO）\",\n                dayIncome: \"同日の返品率\",\n                staticIncome: \"毎日の静的収入（SERO）\",\n                withdraw: \"引き出し可能な現金（SERO）\",\n                detail: \"細部\",\n                id: \"数\",\n                referId: \"リファラーID\",\n                areaId: \"地域ID\",\n                totalInvest: \"主要な\",\n                profitLevel: \"複数の収益\",\n                latestTime: \"最新の収益時間\",\n                totalReturn: \"返品合計（SERO）\",\n                totalReturnDay: \"当日のトータルリターン（SERO）\",\n                recommend: \"紹介の数\",\n                staticIncomeTips: \"今日の静的収益は引き出し口座に支払われました\",\n                staticIncomeTips2: \"引き出し口座に収益をトリガー\",\n                investDetail: \"投資の詳細\",\n                myIncome: \"私のパフォーマンス\",\n                areaTotal: \"地区のパフォーマンス\",\n                areaOtherTotal: \"パフォーマンスの合計（地域を除く）\",\n\n                staticReward: \"静的リターン\",\n                recommendReward: \"紹介報酬\",\n                nobilityReward: \"スター賞\",\n                vipReward: \"VIP報酬\",\n                viewCode: \"スマートコントラクトを表示\",\n\n            },\n            button: {\n                deposit: \"預り金\",\n                invest: \"投資\",\n                trigger: \"トリガー収益\",\n                withdraw: \"引き出す\",\n                close: \"閉じる\",\n                copy: \"複写\",\n            },\n            modal: {\n                deposit: {\n                    title: \"預り金\",\n                    copy: \"複写\",\n                },\n\n                invest: {\n                    title: \"投資\",\n                    referId: \"リファラーID\",\n                    amount: \"投資額\",\n                    amountTips: \"10 SERO開始\",\n                    availableSERO: \"利用可能残高\",\n                    total: \"お支払い総額\",\n                    estimate: \"推定収入\",\n                    password: \"アカウントパスワード\",\n                    passwordPlace: \"アカウントのパスワードを入力してください\",\n                },\n\n                trigger: {\n                    password: \"アカウントパスワード\",\n                    passwordPlace: \"アカウントのパスワードを入力してください\",\n                },\n\n                withdraw: {\n                    password: \"アカウントパスワード\",\n                    passwordPlace: \"アカウントのパスワードを入力してください\",\n                    tips: \"※引き出しはUTXO口座に直接行われます。\",\n                },\n            },\n        },\n        toast: {\n            lessAmount: \"SERO残高はこのトランザクションをカバーするのに十分ではありません。\",\n            minInvest: \"最小投資額は10 SEROです。\",\n            tx: \"トランザクション送信が成功し、ブロックパッケージングトランザクションを待機しています、トランザクションハッシュ： \",\n            copySuccess: \"正常にコピーされました\",\n\n        }\n    };\n}\n\nexport default Lang","import React, {Component} from 'react';\nimport {\n    Layout,\n    Skeleton,\n    Descriptions,\n    Divider,\n    notification,\n    List,\n    Tag,\n    Avatar,\n    Row,\n    Col,\n    Statistic,\n    Button,\n    Modal,\n    ConfigProvider,\n    Input,\n    Rate,\n    message, Form, InputNumber, Radio, Progress\n} from \"antd\";\n\nimport {WaterWave, Pie} from 'ant-design-pro/lib/Charts';\nimport 'ant-design-pro/dist/ant-design-pro.css';\nimport SelectAccount from \"./component/SelectAccount\"\nimport BigNumber from \"bignumber.js\"\nimport serojs from \"serojs\"\n\nimport \"./App.css\"\nimport copy from \"copy-text-to-clipboard\";\nimport QRCode from \"qrcode\";\nimport enUS from 'antd/es/locale/en_US';\nimport zhCN from 'antd/es/locale/zh_CN';\nimport Language from \"./Lang\"\nimport identicon from \"identicon.js\"\nimport Contract from \"./component/contract\"\n// import popup from 'popup-js-sdk'\nimport seropp from 'sero-pp'\n\nimport Head from './head.png'\n\nlet ct = new Contract();\nlet Lang = new Language();\nconst {Header, Content, Footer} = Layout;\n\n\nlet contract = serojs.callContract(ct.abi, ct.address);\n\nlet decimal = new BigNumber(10).pow(18);\nconst {Countdown} = Statistic;\n\n\nconst openNotificationWithIcon = (type, message, desc) => {\n    notification[type]({\n        message: message,\n        description: <p style={{wordBreak: 'normal', whiteSpace: 'pre-wrap', wordWrap: 'break-word'}}>{desc}</p>,\n        duration: null,\n    });\n};\n\n\nconst InvestForm = Form.create({name: 'form_in_modal2'})(\n    class extends React.Component {\n\n        state = {\n            confirmLoading: false,\n            estimateReturn: 0,\n            estimateLevel: 0,\n            ticket: 0.000000,\n            amount: 0.000000,\n            total: 0.000000,\n        }\n\n        staticTotal() {\n            let that = this;\n            setTimeout(function () {\n                let times = that.props.times;\n                let total = new BigNumber(that.state.amount);\n\n                let estimateLevel = 3;\n                if (times > 0) {\n                    estimateLevel = times;\n                } else {\n                    if (parseFloat(that.state.amount) > 0 && parseFloat(that.state.amount) < 500) {\n                        estimateLevel = 3\n                    } else if (parseFloat(that.state.amount) >= 500 && parseFloat(that.state.amount) < 5000) {\n                        estimateLevel = 4\n                    } else if (parseFloat(that.state.amount) >= 5000) {\n                        estimateLevel = 5\n                    }\n                }\n\n                that.setState({\n                    total: total.toFixed(6),\n                    estimateLevel: estimateLevel\n                })\n            }, 10)\n        }\n\n        render() {\n            const {visible, rate, sero, onCancel, onCreate, form, referId} = this.props;\n            const {getFieldDecorator, setFieldsValue} = form;\n\n            setTimeout(function () {\n                if (referId && referId !== 0) {\n                    setFieldsValue({\"ReferId\": referId});\n                }\n            }, 100)\n\n            let that = this;\n            return (\n                <Modal\n                    visible={visible}\n                    title={Lang[that.props.lang].account.modal.invest.title}\n                    onCancel={onCancel}\n                    onOk={() => {\n                        this.setState({\n                            confirmLoading: true\n                        });\n                        setTimeout(function () {\n                            onCreate(function (res) {\n                                that.setState({\n                                    confirmLoading: res\n                                });\n                            });\n                        }, 10)\n                    }}\n                    confirmLoading={this.state.confirmLoading}\n                >\n                    <Form layout=\"vertical\">\n                        <Form.Item label={Lang[that.props.lang].account.modal.invest.referId}>\n                            {getFieldDecorator(`ReferId`, {\n                                rules: [{required: true, message: `Please Input Refer Id`}],\n                            })(<Input style={{width: '60%'}} disabled={!(!referId || referId === 0)}\n                                      placeholder={referId ? referId : \"\"} autoComplete=\"off\"/>)}\n                        </Form.Item>\n                        <Form.Item\n                            label={`${Lang[that.props.lang].account.modal.invest.amount} (Available Balance: ${sero} SERO)`}>\n                            {getFieldDecorator('AmountSero', {\n                                rules: [{required: true, message: `Please Input Amount! `}],\n                            })(<InputNumber min={0} precision={6} max={parseFloat(sero)} step={100}\n                                            style={{width: '60%'}} onChange={(v) => {\n                                that.setState({amount: v});\n                                that.staticTotal();\n                            }} allowClear placeholder=\"0.000000\" autoComplete=\"off\"/>)}\n                            <br/>SERO ({Lang[that.props.lang].account.modal.invest.amountTips})\n                        </Form.Item>\n                        <p>{Lang[that.props.lang].account.modal.invest.estimate}: <span\n                            style={{color: '#1DA57A'}}>{that.state.amount}</span> (SERO) x <span\n                            style={{color: '#1DA57A'}}>{that.state.estimateLevel} </span>(Times) = <strong\n                            style={{color: 'rgb(216, 0, 38)'}}>{new BigNumber(that.state.amount).multipliedBy(that.state.estimateLevel).toFixed(6)} </strong>SERO\n                        </p>\n\n                        <p>{Lang[that.props.lang].account.modal.invest.total} : <strong\n                            style={{color: 'rgb(216, 0, 38)'}}>{this.state.total}</strong> SERO</p>\n                    </Form>\n                </Modal>\n            );\n        }\n    },\n);\n\n\nclass ContentPage extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            loading: true,\n            showAccountSelect: false,\n            showDeposit: false,\n            showInvest: false,\n            showShareProfit: false,\n            showWithdraw: false,\n\n            modal1Visible: false,\n\n            currentAccount: {},\n            balanceSero: 0,\n\n            ct_id: 0,\n            ct_details: {},\n\n            lang: \"zh_CN\",\n        }\n    }\n\n    componentWillMount() {\n        // let lang = localStorage.getItem(\"lang\");\n        // if (!lang) {\n        //     lang = \"zh_CN\";\n        //     localStorage.setItem(\"lang\", \"zh_CN\");\n        // }\n        // this.setState({\n        //     lang: lang,\n        // })\n        let that = this;\n        seropp.init(ct.dapp, function (res) {\n            if (res) {\n                that.showSelectAccount();\n                if (!that.state.showAccountSelect) {\n                    setTimeout(function () {\n                        that.getDetail();\n                        that.getContractSeroBalance();\n\n                    }, 3000)\n                }\n                seropp.getInfo(function (info) {\n                    localStorage.setItem(\"lang\", info.language);\n                    that.setState({\n                        lang: info.language,\n                    })\n                });\n\n                setInterval(function () {\n                    that.getDetail();\n                    that.getContractSeroBalance();\n                    if (that.state.currentAccount.PK) {\n                        that.getAccount(that.state.currentAccount.PK)\n                    }\n                }, 60 * 1000)\n            }\n        });\n    }\n\n    showSelectAccount() {\n\n        if (!this.state.currentAccount.PK) {\n            let pk = localStorage.getItem(\"accountPk\");\n            if (pk) {\n                this.getAccount(pk)\n                this.setState({\n                    loading: false\n                })\n            } else {\n                this.setState({\n                    showAccountSelect: true\n                })\n            }\n        }\n    }\n\n    showDeposit() {\n\n        this.setState({\n            showDeposit: true\n        })\n\n        let canvas = document.getElementById('qrImg')\n        QRCode.toCanvas(canvas, this.state.currentAccount.MainPKr, function (error) {\n            if (error) console.error(error)\n            console.log('success!');\n        })\n    }\n\n    selectAccount = ac => {\n        this.setState({\n            currentAccount: ac,\n            showAccountSelect: false,\n            loading: false\n        });\n        localStorage.setItem(\"accountPk\", ac.PK);\n        window.location.reload();\n\n    }\n\n    hiddenAccount = () => {\n        this.setState({\n            showAccountSelect: false,\n        });\n    }\n\n    onChange = checked => {\n        this.setState({loading: !checked});\n    };\n\n    getContractSeroBalance() {\n        let that = this;\n        that.callMethod(\"balanceOfSero\", [], function (res) {\n            if (res) {\n                that.setState({\n                    ct_balanceOfSero: new BigNumber(res, 10).dividedBy(decimal).toFixed(6),\n                })\n            }\n        })\n    }\n\n    //pullup\n    getAccount(pk) {\n        let that = this;\n        seropp.getAccountDetail(pk, function (currentAccount) {\n            let balanceSero = 0;\n            let balanceObj = currentAccount.Balance;\n            balanceObj.forEach(function (value, currency) {\n                if (currency === 'SERO') {\n                    balanceSero = new BigNumber(value).dividedBy(decimal).toFixed(6);\n                }\n            });\n\n            let data = new identicon(pk, 200).toString();\n            currentAccount[\"avatar\"] = \"data:image/png;base64,\" + data;\n            that.setState({\n                currentAccount: currentAccount,\n                balanceSero: balanceSero,\n            });\n        });\n    }\n\n\n    //=== contract\n\n    getDetail() {\n        let that = this;\n        let res = that.callMethod(\"details\", [], function (res) {\n            let detail = {\n                referId: \"\",\n                largeAreaId: \"\",\n                largeAreaTotal: new BigNumber(\"0\").dividedBy(decimal).toFixed(6),\n                amount: new BigNumber(\"0\").dividedBy(decimal).toFixed(6),\n                returnAmount: new BigNumber(\"0\").dividedBy(decimal).toFixed(6),\n                achievement: new BigNumber(\"0\").dividedBy(decimal).toFixed(6),\n                recommendNum: parseInt(new BigNumber(\"0\").toString(10)),\n                profitLevel: parseInt(new BigNumber(\"0\").toString(10)),\n                value: new BigNumber(\"0\").dividedBy(decimal).toFixed(6),\n                star: parseInt(new BigNumber(\"0\").toString(10)),\n                isKing: false,\n            }\n            if (res !== \"0x0\") {\n                if (res) {\n                    let data = res;\n                    detail = {\n                        referId: data[0] == 'JFVVW2ITNSJHF' ? \"\" : data[0],\n                        largeAreaId: data[1] == 'JFVVW2ITNSJHF' ? \"\" : data[1],\n                        largeAreaTotal: new BigNumber(data[2]).dividedBy(decimal).toFixed(6),\n                        amount: new BigNumber(data[3]).dividedBy(decimal).toFixed(6),\n                        returnAmount: new BigNumber(data[4]).dividedBy(decimal).toFixed(6),\n                        achievement: new BigNumber(data[5]).dividedBy(decimal).toFixed(6),\n                        recommendNum: parseInt(new BigNumber(data[6]).toString(10)),\n                        profitLevel: parseInt(new BigNumber(data[7]).toString(10)),\n                        value: new BigNumber(data[8]).dividedBy(decimal).toFixed(6),\n                        star: parseInt(new BigNumber(data[9]).toString(10)),\n                        isKing: data[10],\n                    }\n                }\n\n            }\n            that.callMethod(\"id\", [], function (id) {\n                detail[\"id\"] = (id == \"JFVVW2ITNSJHF\" ? \"\" : id);\n                that.callMethod(\"detailsOfIncome\", [], function (detailsOfIncome) {\n                    detail[\"detailsOfIncome\"] = detailsOfIncome;\n                    that.callMethod(\"calcuStaticProfit\", [], function (calcuStaticProfit) {\n                        if (calcuStaticProfit === '0x') {\n                            calcuStaticProfit = \"0\";\n                        }\n                        detail[\"dayProfit\"] = new BigNumber(calcuStaticProfit).dividedBy(decimal).toFixed(6);\n\n                        console.log(\"dayProfit\", detail[\"dayProfit\"].toString());\n                        that.setState({\n                            ct_details: detail\n                        })\n                    });\n\n                });\n            });\n\n        });\n\n    }\n\n\n    callMethod(_method, args, callback) {\n\n        let packData = contract.packData(_method, args);\n        let callParams = {\n            from: this.state.currentAccount.MainPKr,\n            to: ct.address,\n            data: packData\n        };\n\n        seropp.call(callParams, function (callData, error) {\n            if (error) {\n                console.log(\"error::\", error);\n            } else {\n                let res = contract.unPackData(_method, callData);\n                callback(res);\n            }\n        });\n    }\n\n    executeMethod(_method, args, value, cy, password, callback) {\n        let that = this;\n\n        let packData = contract.packData(_method, args);\n        let executeData = {\n            from: that.state.currentAccount.PK,\n            to: ct.address,\n            value: \"0x\" + value,//SERO\n            data: packData,\n            gas_price: \"0x\" + new BigNumber(\"1000000000\").toString(16),\n            cy: cy,\n        };\n        let estimateParam = {\n            from: that.state.currentAccount.MainPKr,\n            to: ct.address,\n            value: \"0x\" + value,//SERO\n            data: packData,\n            gas_price: \"0x\" + new BigNumber(\"1000000000\").toString(16),\n            cy: cy,\n        };\n        // executeData[\"gas\"] = pullup.sero.estimateGas(estimateParam);\n        seropp.estimateGas(estimateParam, function (gas, error) {\n            if (error) {\n                message.error(error);\n            } else {\n                executeData[\"gas\"] = gas;\n                seropp.executeContract(executeData, function (res) {\n                    callback(res);\n                });\n            }\n        });\n    }\n\n\n    handleCancel = () => {\n        this.setState({\n            showDeposit: false\n        })\n    }\n\n    //====  buyAsnow begin\n    handleBuyAsnowCancel = () => {\n        this.setState({showBuyAsnow: false});\n    };\n\n    handleBuyAsnowCreate = (cb) => {\n        let that = this;\n        const {form} = this.formRef.props;\n        form.validateFields((err, values) => {\n            if (err) {\n                if (cb) {\n                    cb(false)\n                }\n                return;\n            }\n            let amount = form.getFieldValue(\"Amount\");\n            try {\n                this.executeMethod(\"buyAsnow\", [], new BigNumber(amount).multipliedBy(decimal).toString(16), \"SERO\", '', function (res) {\n                    if (res) {\n                        form.resetFields();\n                        that.setState({showBuyAsnow: false});\n                        setTimeout(function () {\n                            openNotificationWithIcon('success', 'Successful', `${Lang[that.state.lang].toast.tx}${res}`)\n                        }, 3000)\n                    }\n                    if (cb) {\n                        cb(false)\n                    }\n                });\n            } catch (err) {\n                if (err) {\n                    message.error(err.message);\n                } else {\n                    message.error(\"request SERO Node error:[\" + err.message + \"]\");\n                }\n                if (cb) {\n                    cb(false)\n                }\n            }\n\n        });\n    };\n\n    //====  buyAsnow end\n\n    //====  Invest begin\n    handleInvestCancel = () => {\n        this.setState({showInvest: false});\n    };\n\n    handleInvestCreate = (cb) => {\n        let that = this;\n        const {form} = this.formRef2.props;\n        form.validateFields((err, values) => {\n            if (err) {\n                if (cb) {\n                    cb(false)\n                }\n                return;\n            }\n            let amountSero = form.getFieldValue(\"AmountSero\");\n            // let ticketSero=form.getFieldValue(\"TicketSero\");\n            let referId = form.getFieldValue(\"ReferId\");\n            let password = form.getFieldValue(\"Password\");\n\n\n            if (that.state.ct_details.referId) {\n                referId = that.state.ct_details.referId;\n            }\n            if (new BigNumber(amountSero).comparedTo(new BigNumber(this.state.balanceSero)) > 0) {\n                if (cb) {\n                    cb(false)\n                }\n                message.warn(Lang[that.state.lang].toast.lessAmount);\n            } else if (parseFloat(amountSero) < 10) {\n                if (cb) {\n                    cb(false)\n                }\n                message.warn(Lang[that.state.lang].toast.minInvest);\n            } else {\n                try {\n                    this.executeMethod(\"invest\", [referId], new BigNumber(amountSero).multipliedBy(decimal).toString(16), \"SERO\", password, function (res) {\n                        if (res) {\n                            form.resetFields();\n                            that.setState({showInvest: false});\n                            setTimeout(function () {\n                                openNotificationWithIcon('success', 'Successful', `${Lang[that.state.lang].toast.tx}${res}`)\n                            }, 3000)\n                        }\n                        if (cb) {\n                            cb(false)\n                        }\n                    });\n                } catch (err) {\n                    if (err) {\n                        message.error(err.message);\n                    } else {\n                        message.error(\"request SERO Node error:[\" + err.message + \"]\");\n                    }\n                    if (cb) {\n                        cb(false)\n                    }\n                }\n            }\n        });\n    };\n\n    // calcuPrincipalProfit = (sero, cb) => {\n    //     if (sero) {\n    //         let seroHex = \"0x\" + new BigNumber(sero).multipliedBy(decimal).toString(16);\n    //         this.callMethod(\"calcuPrincipalProfit\", [seroHex], function (res) {\n    //             if (cb) {\n    //                 cb(res);\n    //             }\n    //         })\n    //     }\n    // }\n\n    saveInvestFormRef = formRef => {\n        this.formRef2 = formRef;\n    };\n\n    //====  Invest end\n\n    shareProfit() {\n        let that = this;\n        try {\n            this.executeMethod(\"triggerStaticProfit\", [], \"0\", \"SERO\", '', function (res) {\n                if (res) {\n                    openNotificationWithIcon('success', 'Successful', `${Lang[that.state.lang].toast.tx}${res}`)\n                } else {\n                    if (res.error) {\n                        message.error(res.error.message);\n                    } else {\n                        message.error(\"request SERO Node error:[\" + res + \"]\");\n                    }\n                }\n            });\n        } catch (err) {\n            if (err) {\n                message.error(err.message);\n            } else {\n                message.error(\"request SERO Node error:[\" + err.message + \"]\");\n            }\n        }\n\n    }\n\n    withdraw() {\n        let that = this;\n        try {\n            this.executeMethod(\"withdrawBalance\", [], \"0\", \"SERO\", '', function (res) {\n                if (res) {\n                    openNotificationWithIcon('success', 'Successful', `${Lang[that.state.lang].toast.tx}${res}`)\n                } else {\n                    if (res.error) {\n                        message.error(res.error.message);\n                    } else {\n                        message.error(\"request SERO Node error:[\" + res + \"]\");\n                    }\n                }\n            });\n        } catch (err) {\n            if (err) {\n                message.error(err.message);\n            } else {\n                message.error(\"request SERO Node error:[\" + err.message + \"]\");\n            }\n        }\n    }\n\n\n    //==== Buy Ticket begin\n\n\n    //==== Buy Ticket end\n\n    render() {\n        const {loading, showAccountSelect, currentAccount} = this.state;\n        let accountName = currentAccount.PK;\n        let that = this;\n        let staticReward = that.state.ct_details.detailsOfIncome ? new BigNumber(that.state.ct_details.detailsOfIncome[0]).dividedBy(decimal).toFixed(2) : 0;\n        let recommendReward = that.state.ct_details.detailsOfIncome ? new BigNumber(that.state.ct_details.detailsOfIncome[1]).dividedBy(decimal).toFixed(2) : 0;\n        let nobilityReward = that.state.ct_details.detailsOfIncome ? new BigNumber(that.state.ct_details.detailsOfIncome[2]).dividedBy(decimal).toFixed(2) : 0;\n        let vipReward = that.state.ct_details.detailsOfIncome ? new BigNumber(that.state.ct_details.detailsOfIncome[3]).dividedBy(decimal).toFixed(2) : 0;\n        // let currentIncome = that.state.ct_details.detailsOfIncome?new BigNumber(that.state.ct_details.detailsOfIncome[4]).dividedBy(decimal).toFixed(2):0;\n        let staticTimestamp = that.state.ct_details.detailsOfIncome ? that.state.ct_details.detailsOfIncome[5] : 0;\n\n        const salesPieData = [\n            {\n                x: Lang[this.state.lang].account.title.staticReward,\n                y: parseFloat(staticReward),\n            },\n            {\n                x: Lang[this.state.lang].account.title.recommendReward,\n                y: parseFloat(recommendReward),\n            },\n            {\n                x: Lang[this.state.lang].account.title.nobilityReward,\n                y: parseFloat(nobilityReward),\n            },\n            {\n                x: Lang[this.state.lang].account.title.vipReward,\n                y: parseFloat(vipReward),\n            },\n\n        ];\n\n        const showChart = parseFloat(staticReward) > 0 || parseFloat(recommendReward) > 0 || parseFloat(nobilityReward) > 0 || parseFloat(vipReward) > 0\n\n        const countDown = nextShareTime();\n        let totalReturnDay = this.state.ct_balanceOfSero ? new BigNumber(this.state.ct_balanceOfSero).dividedBy(30).toFixed(6) : \"0\";\n        let returnPercent = 0;\n        console.log(\"this.state.ct_details.returnAmount:\", this.state.ct_details.returnAmount);\n        if (this.state.ct_details.returnAmount && parseFloat(this.state.ct_details.returnAmount) > 0) {\n            let a = parseFloat(this.state.ct_details.returnAmount);\n            let b = new BigNumber(this.state.ct_details.amount).multipliedBy(this.state.ct_details.profitLevel).toString(10);\n            returnPercent = (a * 100 / parseFloat(b)).toFixed(2);\n        }\n\n        // let showCountDown = new Date(staticTimestamp * 1000).getUTCDate() === parseInt(new Date().getUTCDate());\n\n        let showCountDown = Math.ceil((staticTimestamp * 1000) / (600 * 1000)) === nextShareTime() / (600 * 1000);\n        return (\n            <div className=\"App\" style={{marginTop: '0px'}}>\n                <div className=\"header-n\">\n                    <img src={Head} width={\"100%\"}/>\n                </div>\n                <div className=\"content-n\">\n                    <div className=\"account-n\">\n                        <div style={{\n                            fontSize: '14px',\n                            margin: \"5px\",\n                            color: '#fff'\n                        }}>{Lang[this.state.lang].account.title.utxo}</div>\n                        <div className={\"account-nr\"}>\n                            <Row>\n                                <Col span={18}>\n\n                                    <List.Item.Meta\n                                        title={\n                                            <small>{accountName ? accountName.slice(0, 10) + \"...\"+accountName.slice(-10) : \"\"}{this.state.ct_details.isKing ?\n                                                <Tag color=\"gold\">VIP</Tag> : \"\"}</small>\n                                        }\n                                        description={<Rate count={4}\n                                                           value={this.state.ct_details.star ? this.state.ct_details.star : 0}\n                                                           disabled/>}\n                                    />\n                                    {/*<span*/}\n                                    {/*    className={\"spanx\"}>{accountName ? accountName.slice(0, 10) + \"...\" + accountName.slice(-10) : \"\"}{this.state.ct_details.isKing ?*/}\n                                    {/*    <Tag color=\"gold\">VIP</Tag> : \"\"}</span>*/}\n                                </Col>\n                                <Col span={6} style={{textAlign: 'center'}}>\n                                    <Button type={\"primary\"}\n                                            onClick={() => {\n                                                this.setState({\n                                                    showAccountSelect: true\n                                                })\n                                            }}>{Lang[this.state.lang].account.title.swith}</Button>\n                                </Col>\n                            </Row>\n                            <Row>\n                                <p style={{textAlign: 'center', marginTop: '5px', color: '#fff',fontSize: '18px'}}>\n                                    {this.state.balanceSero} SERO\n                                </p>\n                            </Row>\n                            <p style={{textAlign: 'center'}}>\n                                <Button type={\"primary\"} onClick={() => this.showDeposit()}>充值</Button>\n                            </p>\n                        </div>\n                    </div>\n                    <div className={\"contract-tn\"}>\n                        <div className={\"contract-dn\"}>\n                            <div className=\"contract-n\">\n                                <h2 style={{\n                                    textAlign: 'center',\n                                    fontSize: '16px',\n                                    color: '#fff',\n                                    marginTop: '10px'\n                                }}>{Lang[this.state.lang].account.title.contract}</h2>\n                                <Divider/>\n                                <div>\n                                    <Row>\n                                        <Col span={18}><span\n                                            className={\"spanx\"}>{Lang[this.state.lang].account.title.estimatedTotal}:{new BigNumber(this.state.ct_details.amount ? this.state.ct_details.amount : 0).multipliedBy(this.state.ct_details.profitLevel ? this.state.ct_details.profitLevel : 0).toFixed(2)}</span></Col>\n                                        <Col span={6} style={{textAlign: 'center'}}>\n                                            {/*<Button size={\"small\"}*/}\n                                            {/*        type={\"primary\"}><span>{Lang[this.state.lang].account.button.invest}</span></Button>*/}\n                                            <Button style={{float:\"left\"}}\n                                                    type={\"primary\"} onClick={() => {\n                                                this.setState({showInvest: true})\n                                            }}>{Lang[this.state.lang].account.button.invest}</Button>\n                                        </Col>\n                                    </Row>\n                                    <p/>\n                                    <Row>\n                                        <Col span={18}><span\n                                            className={\"spanx\"}>{Lang[this.state.lang].account.title.staticIncome} {this.state.ct_details.dayProfit}</span></Col>\n                                        <Col span={6} style={{textAlign: 'center'}}>\n                                            {\n                                                showCountDown ?\n                                                    <Countdown style={{marginTop: 14}} title=\"\" format=\"HH:mm:ss\"\n                                                               value={parseFloat(countDown)} onFinish={() => {\n                                                        this.getDetail()\n                                                    }}/> : <Button style={{marginTop: 16}} type=\"primary\"\n                                                                   disabled={showCountDown} onClick={() => {\n                                                        this.shareProfit()\n                                                    }}>{Lang[this.state.lang].account.button.trigger}</Button>\n                                            }\n                                        </Col>\n                                    </Row>\n                                    <p/>\n                                    <Row>\n                                        <Col span={18}><span\n                                            className={\"spanx\"}>{Lang[this.state.lang].account.title.withdraw}:{new BigNumber(this.state.ct_details.value ? this.state.ct_details.value : 0).toFixed(2)}</span></Col>\n                                        <Col span={6} style={{textAlign: 'center'}}>\n                                            <Button style={{marginTop: 16, float:\"left\"}}\n                                                    disabled={new BigNumber(this.state.ct_details.value ? this.state.ct_details.value : 0).comparedTo(0) < 1}\n                                                    type=\"primary\" onClick={() => {\n                                                this.withdraw()\n                                            }}>{Lang[this.state.lang].account.button.withdraw}</Button>\n                                        </Col>\n                                    </Row>\n                                </div>\n                                <div>\n                                    {\n                                        showChart ?\n                                            <Row style={{textAlign: 'center'}}>\n                                                <Col span={24} style={{textAlign: 'center'}}>\n                                                    <div>\n                                                        {returnPercent > 0 ? <WaterWave height={234}\n                                                                                        title={Lang[this.state.lang].account.title.totalReturn}\n                                                                                        percent={returnPercent}/> :\n                                                            <WaterWave height={234}\n                                                                       title={Lang[this.state.lang].account.title.totalReturn}\n                                                                       percent={0}/>}\n                                                    </div>\n                                                </Col>\n                                                <Col span={24} style={{textAlign: 'left'}}>\n                                                    <Pie\n                                                        hasLegend\n                                                        animate\n                                                        title={Lang[this.state.lang].account.title.totalReturn}\n                                                        subTitle={Lang[this.state.lang].account.title.totalReturn}\n                                                        total={() => (\n                                                            <span\n                                                                dangerouslySetInnerHTML={{\n                                                                    __html: salesPieData.reduce((pre, now) => now.y + pre, 0),\n                                                                }}\n                                                            />\n                                                        )}\n                                                        data={salesPieData}\n                                                        valueFormat={val => <span\n                                                            dangerouslySetInnerHTML={{__html: val}}/>}\n                                                        height={248}\n                                                    />\n                                                </Col>\n                                            </Row> : \"\"\n                                    }\n                                </div>\n                                <Divider dashed={true}/>\n                                <Row style={{textAlign: 'center'}}>\n                                    <Col span={12}>\n                                        <Statistic title={Lang[this.state.lang].account.title.totalReturnDay}\n                                                   value={totalReturnDay} precision={2}/>\n                                    </Col>\n                                    <Col span={12}>\n                                        <Statistic title={Lang[this.state.lang].account.title.dayIncome}\n                                                   value={this.state.ct_details.dayProfit && parseFloat(totalReturnDay) > 0 ? new BigNumber(this.state.ct_details.dayProfit).multipliedBy(100).dividedBy(totalReturnDay).toFixed(2) : \"0\"}\n                                                   suffix={\"%\"}/>\n                                    </Col>\n\n                                </Row>\n                                <Row style={{textAlign: 'center'}}>\n                                    <p/>\n                                    <Col span={12}>\n                                        <Statistic title={Lang[this.state.lang].account.title.areaTotal}\n                                                   value={this.state.ct_details.largeAreaTotal} precision={2}/>\n                                    </Col>\n                                    <Col span={12}>\n                                        <Statistic title={Lang[this.state.lang].account.title.areaOtherTotal}\n                                                   value={new BigNumber(this.state.ct_details.achievement).minus(new BigNumber(this.state.ct_details.largeAreaTotal)).toFixed(2)}\n                                                   precision={2}/>\n                                    </Col>\n                                </Row>\n\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className=\"contract-detail-n\">\n                        <Skeleton loading={loading}>\n                            <Descriptions\n                                title={<h2 style={{color: '#fff'}}>{Lang[this.state.lang].project.title}</h2>}>\n                                <Descriptions.Item label={Lang[this.state.lang].project.contractAddress}>\n                                    <small>{ct.address}</small>\n                                </Descriptions.Item>\n                            </Descriptions>\n\n                            <Divider dashed={true}/>\n                            <Descriptions title={<h4\n                                style={{color: '#fff'}}>{Lang[this.state.lang].account.title.investDetail}</h4>}>\n                                <Descriptions.Item\n                                    label={Lang[this.state.lang].account.title.id}>{this.state.ct_details.id}</Descriptions.Item>\n                                <Descriptions.Item\n                                    label={Lang[this.state.lang].account.title.referId}>{this.state.ct_details.referId}</Descriptions.Item>\n                                <Descriptions.Item\n                                    label={Lang[this.state.lang].account.title.areaId}>{this.state.ct_details.largeAreaId}</Descriptions.Item>\n                                <Descriptions.Item\n                                    label={Lang[this.state.lang].account.title.totalInvest}>{this.state.ct_details.amount}</Descriptions.Item>\n                                <Descriptions.Item\n                                    label={Lang[this.state.lang].account.title.profitLevel}>{this.state.ct_details.profitLevel}</Descriptions.Item>\n                                <Descriptions.Item\n                                    label={Lang[this.state.lang].account.title.latestTime}>{convertUTCDate(staticTimestamp)}</Descriptions.Item>\n                            </Descriptions>\n                        </Skeleton>\n                    </div>\n                </div>\n                <div className=\"footer-n\">\n                    <span>风险投资 谨慎参与</span>\n                </div>\n\n                <SelectAccount visible={showAccountSelect} selectAccount={this.selectAccount}\n                               hiddenAccount={this.hiddenAccount}/>\n\n                <Modal\n                    title={Lang[this.state.lang].account.modal.deposit.title}\n                    visible={this.state.showDeposit}\n                    onCancel={this.handleCancel}\n                    footer={null}\n                    getContainer={false}\n                >\n                    <div style={{textAlign: \"center\"}}>\n                        <canvas id=\"qrImg\"></canvas>\n                        <p style={{wordBreak: 'normal', whiteSpace: 'pre-wrap', wordWrap: 'break-word'}}>\n                            <small>{this.state.currentAccount.MainPKr}</small></p>\n                        <Button className='copyTxt' type=\"primary\" onClick={() => {\n                            copy(this.state.currentAccount.MainPKr);\n                            message.success('Copy to clipboard successfully');\n                        }}>{Lang[this.state.lang].account.modal.deposit.copy}</Button>\n                    </div>\n                </Modal>\n\n\n                <InvestForm\n                    wrappedComponentRef={this.saveInvestFormRef}\n                    visible={this.state.showInvest}\n                    onCancel={this.handleInvestCancel}\n                    onCreate={this.handleInvestCreate}\n                    sero={this.state.balanceSero}\n                    asnow={this.state.ct_details.asnowBalances}\n                    // calcuPrincipalProfit={this.calcuPrincipalProfit}\n                    lang={this.state.lang}\n                    times={this.state.ct_details.profitLevel}\n                    referId={this.state.ct_details.referId}\n                />\n\n\n            </div>\n        );\n    }\n}\n\n\nclass App extends Component {\n    constructor() {\n        super();\n        this.state = {\n            locale: zhCN,\n        };\n    }\n\n    componentWillMount() {\n        let lang = localStorage.getItem(\"lang\");\n        let locale = zhCN;\n        if (lang) {\n            if (lang === \"zh_CN\") {\n                locale = zhCN;\n            } else if (lang === \"en_US\") {\n                locale = enUS;\n            }\n        } else {\n            locale = zhCN;\n            localStorage.setItem(\"lang\", \"zh_CN\");\n        }\n\n        this.setState({\n            locale: locale\n        })\n    }\n\n    changeLocale = e => {\n        const localeValue = e.target.value;\n        this.setState({locale: localeValue});\n        if (localeValue.locale === \"en\") {\n            localStorage.setItem(\"lang\", \"en_US\");\n        } else if (localeValue.locale === \"zh-cn\") {\n            localStorage.setItem(\"lang\", \"zh_CN\");\n        }\n    };\n\n    render() {\n        const {locale} = this.state;\n        return (\n            <div className=\"App\" style={{height: document.documentElement.clientHeight}}>\n                <Layout className=\"layout\">\n                    {/*<Header className=\"header\">*/}\n                    {/*    <div className=\"logo\"><img src={logo}/></div>*/}\n                    {/*    <div className=\"change-locale\">*/}\n                    {/*        <Radio.Group value={locale} onChange={this.changeLocale}>*/}\n                    {/*            <Radio.Button key=\"en\" value={enUS}>*/}\n                    {/*                English*/}\n                    {/*            </Radio.Button>*/}\n                    {/*            <Radio.Button key=\"cn\" value={zhCN}>*/}\n                    {/*                中文*/}\n                    {/*            </Radio.Button>*/}\n                    {/*        </Radio.Group>*/}\n                    {/*    </div>*/}\n                    {/*</Header>*/}\n\n                    <ConfigProvider locale={locale}>\n                        <ContentPage key={locale ? locale.locale : 'en'}/>\n                    </ConfigProvider>\n                    <Footer style={{textAlign: 'center'}}/>\n                </Layout>\n            </div>\n        );\n    }\n}\n\nfunction convertUTCDate(dateTimestamp) {\n    if (dateTimestamp && dateTimestamp > 0) {\n        let cDate = new Date(dateTimestamp * 1000);\n        return appendZero(cDate.getMonth() + 1) + \"/\" + appendZero(cDate.getDate()) + \" \" + appendZero(cDate.getHours()) + \":\" + appendZero(cDate.getMinutes());\n    }\n    return \"\"\n}\n\nfunction nextShareTime() {\n    let d = new Date();\n    // d.setTime(d.getTime() + 24 * 60 * 60 * 1000);\n    // let year = d.getUTCFullYear();\n    // let month = d.getUTCMonth();\n    // let day = d.getUTCDate();\n    //\n    // d = new Date(year, month, day, 0, 0, 0);\n    //\n    // let tz = new Date().getTimezoneOffset() / 60;\n    // return d.getTime() + (-tz) * 60 * 60 * 1000;\n    let time = d.getTime() + 600 * 1000;\n    time = time - time % (600 * 1000);\n    return time;\n}\n\nfunction appendZero(i) {\n    i = i < 10 ? \"0\" + i : i;\n    return i;\n}\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}