{"version":3,"sources":["head.png","server.js","component/contract.js","component/SelectAccount.js","Lang.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","host","Axios","api","bizData","pageData","callback","data","base","timestamp","sign","biz","page","axios","post","then","response","catch","error","_method","_params","id","jsonrpc","method","params","console","log","Contract","address","abi","dapp","name","contractAddress","github","author","url","document","location","href","logo","protocol","tmpPkr","Option","ct","SelectAccount","window","props","handleOk","e","that","accounts","state","ac","MainPKr","selectAccount","hiddenAccount","handleCancel","onChange","v","accountOptions","this","seropp","init","res","getAccounts","pk","slice","getAccountList","dataArray","i","tmpArr","acName","Name","push","value","key","formatPK","PK","setState","title","visible","onOk","onCancel","showSearch","style","width","placeholder","Component","Lang","zh_CN","project","balanceSero","account","utxo","contract","swith","estimatedTotal","dayIncome","staticIncome","withdraw","detail","referId","areaId","totalInvest","profitLevel","latestTime","totalReturn","totalReturnDay","recommend","staticIncomeTips","staticIncomeTips2","investDetail","myIncome","areaTotal","areaOtherTotal","staticReward","recommendReward","nobilityReward","vipReward","viewCode","button","deposit","invest","trigger","close","copy","modal","amount","amountTips","availableSERO","total","estimate","password","passwordPlace","tips","toast","lessAmount","minInvest","tx","copySuccess","en_US","ticket","availableExchange","Language","Footer","Header","Content","serojs","callContract","decimal","BigNumber","pow","Countdown","openNotificationWithIcon","type","message","desc","notification","description","wordBreak","whiteSpace","wordWrap","duration","InvestForm","create","confirmLoading","estimateReturn","estimateLevel","setTimeout","times","parseFloat","toFixed","sero","rate","onCreate","form","getFieldDecorator","setFieldsValue","lang","layout","Item","label","rules","required","disabled","autoComplete","min","precision","max","step","staticTotal","allowClear","color","multipliedBy","React","ContentPage","currentAccount","showAccountSelect","loading","localStorage","setItem","reload","checked","showDeposit","handleBuyAsnowCancel","showBuyAsnow","handleBuyAsnowCreate","cb","formRef","validateFields","err","values","getFieldValue","executeMethod","toString","resetFields","handleInvestCancel","showInvest","handleInvestCreate","formRef2","amountSero","ct_details","comparedTo","warn","calcuPrincipalProfit","seroHex","callMethod","saveInvestFormRef","showShareProfit","showWithdraw","modal1Visible","ct_id","getItem","showSelectAccount","getDetail","getContractSeroBalance","setInterval","getAccount","canvas","getElementById","QRCode","toCanvas","ct_balanceOfSero","dividedBy","getAccountDetail","Balance","forEach","currency","identicon","largeAreaId","largeAreaTotal","returnAmount","achievement","recommendNum","parseInt","star","isKing","detailsOfIncome","calcuStaticProfit","args","packData","callParams","from","to","call","callData","unPackData","cy","executeData","gas_price","estimateParam","estimateGas","gas","executeContract","accountName","staticTimestamp","salesPieData","x","y","showChart","countDown","nextShareTime","returnPercent","a","b","showCountDown","Math","ceil","className","marginTop","src","Head","fontSize","margin","span","textAlign","size","onClick","dayProfit","format","onFinish","shareProfit","height","percent","hasLegend","animate","subTitle","dangerouslySetInnerHTML","__html","reduce","pre","now","valueFormat","val","dashed","suffix","minus","dateTimestamp","cDate","Date","appendZero","getMonth","getDate","getHours","getMinutes","convertUTCDate","footer","getContainer","success","wrappedComponentRef","asnow","asnowBalances","time","getTime","App","changeLocale","localeValue","target","locale","zhCN","enUS","documentElement","clientHeight","Boolean","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.af38e07e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/head.cfed5fd0.png\";","import axios from 'axios';\n\nlet host = \"http://127.0.0.1:2345/\";\n\nclass Axios {\n\n    post(api, bizData, pageData, callback) {\n        let data = {\n            base: {\n                timestamp: 1234567,\n                sign: \"67ff54447b89f06fe4408b89902e585167abad291ec41118167017925e24e320\",\n            },\n            biz: bizData,\n            page: pageData,\n        }\n        axios.post(host + api, data).then(function (response) {\n            let data = response.data\n            if (callback) {\n                callback(data);\n            }\n        }).catch(function (error) {\n\n        })\n    }\n\n    postSeroRpc(_method, _params, callback) {\n        let data = {\n            id: 0,\n            jsonrpc: \"2.0\",\n            method: _method,\n            params: _params,\n        };\n        axios.post(host + \"rpc\", data).then(function (response) {\n            let data = response.data\n            if (callback) {\n                callback(data);\n            }\n        }).catch(function (error) {\n            console.log(\"req error: \",error)\n        })\n    }\n\n    postPullupRpc(_method, _params, callback) {\n        let data = {\n            id: 0,\n            method: _method,\n            params: _params,\n        };\n        axios.post(host + \"pullup_rpc\", data).then(function (response) {\n            let data = response.data\n            if (callback) {\n                callback(data);\n            }\n        }).catch(function (error) {\n\n        })\n    }\n\n}\n\nexport default Axios;","class Contract{\n\n    address = \"9bgiptPbtmMqE6G9zRYafEYR94soNBDM4epydo744j1L8HcoJWq8JwjxeoKcvMgWbvj31aTecGm7r4LZw4aRSbB\";\n\n    abi = [{\"constant\":false,\"inputs\":[{\"name\":\"refereeCode\",\"type\":\"string\"}],\"name\":\"invest\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"detailsOfIncome\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"triggerStaticProfit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"setMarketAddr\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"details\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint8\"},{\"name\":\"\",\"type\":\"bool\"},{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdrawBalance\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"registerNode\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"calcuStaticProfit\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"id\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"balanceOfSero\",\"outputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"code\",\"type\":\"string\"}],\"name\":\"codeExist\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_triggerStaticNum\",\"type\":\"uint256\"}],\"name\":\"setTriggerStaticNum\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_marketAddr\",\"type\":\"address\"},{\"name\":\"_codeServiceAddr\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}]\n\n    dapp = {\n        name: \"add\",\n        contractAddress: \"9bgiptPbtmMqE6G9zRYafEYR94soNBDM4epydo744j1L8HcoJWq8JwjxeoKcvMgWbvj31aTecGm7r4LZw4aRSbB\",\n        github: \"https://github.com/add-plus/\",\n        author: \"add-plus\",\n        url: document.location.href,\n        logo: document.location.protocol + '//' + document.location.host + '/add/logo.png'\n    };\n}\n\nexport default Contract","import React, {Component} from 'react'\nimport {Modal, Select} from \"antd\";\nimport Axios from \"../server\";\n// import Pullup from \"pullup-js-sdk\";\nimport seropp from 'sero-pp'\nimport Contract from \"./contract\";\n\nlet tmpPkr = '';\nlet ajax = new Axios();\nconst {Option} = Select;\n\nlet ct = new Contract();\n// var pullup = new Pullup();\n// pullup.setProvider(new pullup.providers.HttpProvider('http://127.0.0.1:2345'));\nlet host = window.location.host;\n\n\n\nclass SelectAccount extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            accountOptions: [],\n            accounts: [],\n        }\n    }\n\n\n    componentDidMount() {\n        let that = this;\n        seropp.init(ct.dapp, function (res) {\n            if(res){\n                that.getAccounts();\n            }\n        });\n\n    }\n\n    handleOk = e => {\n        let that = this;\n        if (tmpPkr !== '') {\n            let accounts = that.state.accounts;\n            for (let ac of accounts) {\n                if (ac.MainPKr === tmpPkr) {\n                    that.props.selectAccount(ac);\n                }\n            }\n        }\n        that.props.hiddenAccount();\n    };\n\n    handleCancel = e => {\n        let that = this;\n        that.props.hiddenAccount();\n    };\n\n    onChange = (v) => {\n        tmpPkr = v;\n    }\n\n    formatPK(pk) {\n        return pk.slice(0, 10) + \"....\" + pk.slice(-10)\n    }\n\n    getAccounts() {\n        let that = this;\n        // let res = pullup.local.accountList()\n        seropp.getAccountList(function (res) {\n            if (res) {\n                let dataArray = res;\n                let i = 0;\n                let tmpArr = [];\n                for (let ac of dataArray) {\n                    let acName = ac.Name;\n                    i++;\n                    if (!acName) {\n                        acName = \"Account\" + i;\n                    }\n                    tmpArr.push(<Option value={ac.MainPKr} key={i}>{acName + \" \" + that.formatPK(ac.PK)}</Option>)\n                }\n                that.setState({\n                    accountOptions: tmpArr,\n                    accounts: dataArray\n                })\n            }\n        });\n    };\n\n    render() {\n        return (\n            <Modal\n                title=\"Select Account\"\n                visible={this.props.visible}\n                onOk={this.handleOk}\n                onCancel={this.handleCancel}\n            >\n                <Select showSearch\n                        style={{width: '98%'}}\n                        placeholder=\"Select an account\"\n                        onChange={(v) => {\n                            this.onChange(v);\n                        }}\n                >\n                    {this.state.accountOptions}\n                </Select>\n            </Modal>\n        )\n    }\n}\n\n\nexport default SelectAccount","class Lang {\n\n    zh_CN={\n        project:{\n            title:\"合约详情\",\n            contractAddress:\"合约地址\",\n            balanceSero:\"当前余额 (SERO)\",\n        },\n\n        account:{\n            title:{\n                utxo:\"钱包账户\",\n                contract:\"合约账户\",\n                swith:\"切换账户\",\n                balanceSero:\"余额 (SERO)\",\n                estimatedTotal:\"预计总收益 (SERO)\",\n                dayIncome:\"当天返还比例\",\n                staticIncome:\"当天静态返还 (SERO)\",\n                withdraw:\"可提现金额 (SERO)\",\n                detail:\"详情\",\n                id:\"编号\",\n                referId:\"推荐人编号\",\n                areaId:\"大区编号\",\n                totalInvest:\"本金\",\n                profitLevel:\"收益倍数\",\n                latestTime:\"最新收益时间\",\n                totalReturn:\"当前返还总数(SERO)\",\n                totalReturnDay:\"当天返还总数(SERO)\",\n                recommend:\"下级人数\",\n                staticIncomeTips:\"今天的静态收益已经支付到可提现账户.\",\n                staticIncomeTips2:\"触发收益到提现账户.\",\n                investDetail:\"投资详情\",\n                myIncome:\"我的业绩\",\n                areaTotal:\"大区业绩\",\n                areaOtherTotal:\"业绩总和(不含大区)\",\n\n                staticReward:\"静态返还\",\n                recommendReward:\"推荐奖\",\n                nobilityReward:\"星级奖\",\n                vipReward:\"VIP奖\",\n                viewCode:\"查看智能合约\",\n\n            },\n            button:{\n                deposit:\"充值\",\n                invest:\"投资\",\n                trigger:\"触发收益\",\n                withdraw:\"提现\",\n                close:\"关闭\",\n                copy:\"拷贝\",\n            },\n            modal:{\n                deposit:{\n                    title:\"充值\",\n                    copy:\"拷贝\",\n                },\n\n                invest:{\n                    title:\"投资\",\n                    referId:\"推荐人编号\",\n                    amount:\"投资金额\",\n                    amountTips:\"10 SERO起投\",\n                    availableSERO:\"可用的余额\",\n                    total:\"应付合计\",\n                    estimate:\"预计收益\",\n                    password:\"账户密码\",\n                    passwordPlace:\"输入账户密码\",\n                },\n\n                trigger:{\n                    password:\"账户密码\",\n                    passwordPlace:\"输入账户密码\",\n                },\n\n                withdraw:{\n                    password:\"账户密码\",\n                    passwordPlace:\"输入账户密码\",\n                    tips:\"* 提现金额将直接提到UTXO账户.\",\n                },\n            },\n        },\n        toast:{\n            lessAmount:\"SERO余额不足以支付本次交易.\",\n            minInvest:\"最小投资金额为 10 SERO.\",\n            tx:\"交易提交成功, 等待区块打包交易, 交易哈希: \",\n            copySuccess:\"拷贝成功! \",\n\n        }\n    };\n\n    en_US={\n        project:{\n            title:\"Contract Info\",\n            contractAddress:\"Contract Address\",\n            balanceSero:\"Current Balance (SERO)\",\n        },\n\n        account:{\n            title:{\n                utxo:\"Wallet Account\",\n                contract:\"Contract Account\",\n                swith:\"Switch Account\",\n                balanceSero:\"Balance (SERO)\",\n                estimatedTotal:\"Estimated Total Income (SERO)\",\n                dayIncome:\"Return rate on the day\",\n                staticIncome:\"Static Return (SERO)\",\n                withdraw:\"Withdrawal Account (SERO)\",\n                detail:\"Detail\",\n                id:\"ID\",\n                referId:\"Refer ID\",\n                areaId:\"Large Area ID\",\n                totalInvest:\"Total Invest\",\n                profitLevel:\"Profit Level\",\n                latestTime:\"Latest Share Time\",\n                totalReturn:\"Total Return\",\n                totalReturnDay:\"Total return on the day (SERO)\",\n                recommend:\"Recommend Number\",\n                staticIncomeTips:\"Your income have been paid to the withdrawal account.\",\n                staticIncomeTips2:\"Trigger to withdrawal account. \",\n                investDetail:\"Invest Info\",\n                myIncome:\"My performance\",\n                areaTotal:\"Regional performance\",\n                areaOtherTotal:\"Total performance (excluding the large region)\",\n\n                staticReward:\"Static\",\n                recommendReward:\"Recommend\",\n                nobilityReward:\"Nobility\",\n                vipReward:\"VIP\",\n                viewCode:\"View Smart Contract\",\n            },\n            button:{\n                deposit:\"Deposit SERO\",\n                invest:\"Invest\",\n                trigger:\"Trigger Income\",\n                withdraw:\"Withdraw\",\n                close:\"Close\",\n                copy:\"Copy\",\n            },\n            modal:{\n                deposit:{\n                    title:\"Deposit\",\n                    copy:\"COPY\",\n                },\n\n                invest:{\n                    title:\"Invest\",\n                    referId:\"Refer ID\",\n                    ticket:\"Tickets\",\n                    amount:\"Invet Amount\",\n                    amountTips:\"At least invest 10 SERO\",\n                    availableSERO:\"Available Blance\",\n                    availableExchange:\"Max Exchange\",\n                    total:\"Total\",\n                    estimate:\"Estimated Return\",\n                    password:\"Password\",\n                },\n\n                trigger:{\n                    password:\"Password\",\n                },\n\n                withdraw:{\n                    password:\"Password\",\n                    tips:\"* This is the withdrawal of the amount to the UTXO account.\",\n                },\n            },\n        },\n        toast:{\n            lessAmount:\"The balance is not enough to pay for this transaction.\",\n            minInvest:\"Invest Amount at least 10 SERO.\",\n            tx:\"The transaction was submitted successfully, waiting for the block to be packaged, and the transaction hash: \",\n            copySuccess:\"Copy to clipboard successfully! \",\n        },\n    }\n}\n\nexport default Lang","import React, {Component} from 'react';\nimport {\n    Layout,\n    Skeleton,\n    Descriptions,\n    Divider,\n    notification,\n    List,\n    Tag,\n    Avatar,\n    Row,\n    Col,\n    Statistic,\n    Button,\n    Modal,\n    ConfigProvider,\n    Input,\n    Rate,\n    message, Form, InputNumber, Radio, Progress\n} from \"antd\";\n\nimport {WaterWave, Pie} from 'ant-design-pro/lib/Charts';\nimport 'ant-design-pro/dist/ant-design-pro.css';\nimport SelectAccount from \"./component/SelectAccount\"\nimport BigNumber from \"bignumber.js\"\nimport serojs from \"serojs\"\n\nimport \"./App.css\"\nimport copy from \"copy-text-to-clipboard\";\nimport QRCode from \"qrcode\";\nimport enUS from 'antd/es/locale/en_US';\nimport zhCN from 'antd/es/locale/zh_CN';\nimport Language from \"./Lang\"\nimport identicon from \"identicon.js\"\nimport Contract from \"./component/contract\"\n// import popup from 'popup-js-sdk'\nimport seropp from 'sero-pp'\n\nimport Head from './head.png'\n\nlet ct = new Contract();\nlet Lang = new Language();\nconst {Header, Content, Footer} = Layout;\n\n\nlet contract = serojs.callContract(ct.abi, ct.address);\n\nlet decimal = new BigNumber(10).pow(18);\nconst {Countdown} = Statistic;\n\n\nconst openNotificationWithIcon = (type, message, desc) => {\n    notification[type]({\n        message: message,\n        description: <p style={{wordBreak: 'normal', whiteSpace: 'pre-wrap', wordWrap: 'break-word'}}>{desc}</p>,\n        duration: null,\n    });\n};\n\n\nconst InvestForm = Form.create({name: 'form_in_modal2'})(\n    class extends React.Component {\n\n        state = {\n            confirmLoading: false,\n            estimateReturn: 0,\n            estimateLevel: 0,\n            ticket: 0.000000,\n            amount: 0.000000,\n            total: 0.000000,\n        }\n\n        staticTotal() {\n            let that = this;\n            setTimeout(function () {\n                let times = that.props.times;\n                let total = new BigNumber(that.state.amount);\n\n                let estimateLevel = 3;\n                if (times > 0) {\n                    estimateLevel = times;\n                } else {\n                    if (parseFloat(that.state.amount) > 0 && parseFloat(that.state.amount) < 500) {\n                        estimateLevel = 3\n                    } else if (parseFloat(that.state.amount) >= 500 && parseFloat(that.state.amount) < 5000) {\n                        estimateLevel = 4\n                    } else if (parseFloat(that.state.amount) >= 5000) {\n                        estimateLevel = 5\n                    }\n                }\n\n                that.setState({\n                    total: total.toFixed(6),\n                    estimateLevel: estimateLevel\n                })\n            }, 10)\n        }\n\n        render() {\n            const {visible, rate, sero, onCancel, onCreate, form, referId} = this.props;\n            const {getFieldDecorator, setFieldsValue} = form;\n\n            setTimeout(function () {\n                if (referId && referId !== 0) {\n                    setFieldsValue({\"ReferId\": referId});\n                }\n            }, 100)\n\n            let that = this;\n            return (\n                <Modal\n                    visible={visible}\n                    title={Lang[that.props.lang].account.modal.invest.title}\n                    onCancel={onCancel}\n                    onOk={() => {\n                        this.setState({\n                            confirmLoading: true\n                        });\n                        setTimeout(function () {\n                            onCreate(function (res) {\n                                that.setState({\n                                    confirmLoading: res\n                                });\n                            });\n                        }, 10)\n                    }}\n                    confirmLoading={this.state.confirmLoading}\n                >\n                    <Form layout=\"vertical\">\n                        <Form.Item label={Lang[that.props.lang].account.modal.invest.referId}>\n                            {getFieldDecorator(`ReferId`, {\n                                rules: [{required: true, message: `Please Input Refer Id`}],\n                            })(<Input style={{width: '60%'}} disabled={!(!referId || referId === 0)}\n                                      placeholder={referId ? referId : \"\"} autoComplete=\"off\"/>)}\n                        </Form.Item>\n                        <Form.Item\n                            label={`${Lang[that.props.lang].account.modal.invest.amount} (Available Balance: ${sero} SERO)`}>\n                            {getFieldDecorator('AmountSero', {\n                                rules: [{required: true, message: `Please Input Amount! `}],\n                            })(<InputNumber min={0} precision={6} max={parseFloat(sero)} step={100}\n                                            style={{width: '60%'}} onChange={(v) => {\n                                that.setState({amount: v});\n                                that.staticTotal();\n                            }} allowClear placeholder=\"0.000000\" autoComplete=\"off\"/>)}\n                            <br/>SERO ({Lang[that.props.lang].account.modal.invest.amountTips})\n                        </Form.Item>\n                        <p>{Lang[that.props.lang].account.modal.invest.estimate}: <span\n                            style={{color: '#1DA57A'}}>{that.state.amount}</span> (SERO) x <span\n                            style={{color: '#1DA57A'}}>{that.state.estimateLevel} </span>(Times) = <strong\n                            style={{color: 'rgb(216, 0, 38)'}}>{new BigNumber(that.state.amount).multipliedBy(that.state.estimateLevel).toFixed(6)} </strong>SERO\n                        </p>\n\n                        <p>{Lang[that.props.lang].account.modal.invest.total} : <strong\n                            style={{color: 'rgb(216, 0, 38)'}}>{this.state.total}</strong> SERO</p>\n                    </Form>\n                </Modal>\n            );\n        }\n    },\n);\n\n\nclass ContentPage extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            loading: true,\n            showAccountSelect: false,\n            showDeposit: false,\n            showInvest: false,\n            showShareProfit: false,\n            showWithdraw: false,\n\n            modal1Visible: false,\n\n            currentAccount: {},\n            balanceSero: 0,\n\n            ct_id: 0,\n            ct_details: {},\n\n            lang: \"zh_CN\",\n        }\n    }\n\n    componentWillMount() {\n        let lang = localStorage.getItem(\"lang\");\n        if (!lang) {\n            lang = \"zh_CN\";\n            localStorage.setItem(\"lang\", \"zh_CN\");\n        }\n        this.setState({\n            lang: lang,\n        })\n    }\n\n    componentDidMount() {\n        let that = this;\n        seropp.init(ct.dapp, function (res) {\n            if (res) {\n                that.showSelectAccount();\n                if (!that.state.showAccountSelect) {\n                    setTimeout(function () {\n                        that.getDetail();\n                        that.getContractSeroBalance();\n\n                    }, 3000)\n                }\n\n                setInterval(function () {\n                    that.getDetail();\n                    that.getContractSeroBalance();\n                    if (that.state.currentAccount.PK) {\n                        that.getAccount(that.state.currentAccount.PK)\n                    }\n                }, 60 * 1000)\n            }\n        });\n    }\n\n    showSelectAccount() {\n\n        if (!this.state.currentAccount.PK) {\n            let pk = localStorage.getItem(\"accountPk\");\n            if (pk) {\n                this.getAccount(pk)\n                this.setState({\n                    loading: false\n                })\n            } else {\n                this.setState({\n                    showAccountSelect: true\n                })\n            }\n        }\n    }\n\n    showDeposit() {\n\n        this.setState({\n            showDeposit: true\n        })\n\n        let canvas = document.getElementById('qrImg')\n        QRCode.toCanvas(canvas, this.state.currentAccount.MainPKr, function (error) {\n            if (error) console.error(error)\n            console.log('success!');\n        })\n    }\n\n    selectAccount = ac => {\n        this.setState({\n            currentAccount: ac,\n            showAccountSelect: false,\n            loading: false\n        });\n        localStorage.setItem(\"accountPk\", ac.PK);\n        window.location.reload();\n\n    }\n\n    hiddenAccount = () => {\n        this.setState({\n            showAccountSelect: false,\n        });\n    }\n\n    onChange = checked => {\n        this.setState({loading: !checked});\n    };\n\n    getContractSeroBalance() {\n        let that = this;\n        that.callMethod(\"balanceOfSero\", [], function (res) {\n            if (res) {\n                that.setState({\n                    ct_balanceOfSero: new BigNumber(res, 10).dividedBy(decimal).toFixed(6),\n                })\n            }\n        })\n    }\n\n    //pullup\n    getAccount(pk) {\n        let that = this;\n        seropp.getAccountDetail(pk, function (currentAccount) {\n            let balanceSero = 0;\n            let balanceObj = currentAccount.Balance;\n            balanceObj.forEach(function (value, currency) {\n                if (currency === 'SERO') {\n                    balanceSero = new BigNumber(value).dividedBy(decimal).toFixed(6);\n                }\n            });\n\n            let data = new identicon(pk, 200).toString();\n            currentAccount[\"avatar\"] = \"data:image/png;base64,\" + data;\n            that.setState({\n                currentAccount: currentAccount,\n                balanceSero: balanceSero,\n            });\n        });\n    }\n\n\n    //=== contract\n\n    getDetail() {\n        let that = this;\n        let res = that.callMethod(\"details\", [], function (res) {\n            let detail = {\n                referId: \"\",\n                largeAreaId: \"\",\n                largeAreaTotal: new BigNumber(\"0\").dividedBy(decimal).toFixed(6),\n                amount: new BigNumber(\"0\").dividedBy(decimal).toFixed(6),\n                returnAmount: new BigNumber(\"0\").dividedBy(decimal).toFixed(6),\n                achievement: new BigNumber(\"0\").dividedBy(decimal).toFixed(6),\n                recommendNum: parseInt(new BigNumber(\"0\").toString(10)),\n                profitLevel: parseInt(new BigNumber(\"0\").toString(10)),\n                value: new BigNumber(\"0\").dividedBy(decimal).toFixed(6),\n                star: parseInt(new BigNumber(\"0\").toString(10)),\n                isKing: false,\n            }\n            if (res !== \"0x0\") {\n                if (res) {\n                    let data = res;\n                    detail = {\n                        referId: data[0] == 'JFVVW2ITNSJHF' ? \"\" : data[0],\n                        largeAreaId: data[1] == 'JFVVW2ITNSJHF' ? \"\" : data[1],\n                        largeAreaTotal: new BigNumber(data[2]).dividedBy(decimal).toFixed(6),\n                        amount: new BigNumber(data[3]).dividedBy(decimal).toFixed(6),\n                        returnAmount: new BigNumber(data[4]).dividedBy(decimal).toFixed(6),\n                        achievement: new BigNumber(data[5]).dividedBy(decimal).toFixed(6),\n                        recommendNum: parseInt(new BigNumber(data[6]).toString(10)),\n                        profitLevel: parseInt(new BigNumber(data[7]).toString(10)),\n                        value: new BigNumber(data[8]).dividedBy(decimal).toFixed(6),\n                        star: parseInt(new BigNumber(data[9]).toString(10)),\n                        isKing: data[10],\n                    }\n                }\n\n            }\n            that.callMethod(\"id\", [], function (id) {\n                detail[\"id\"] = (id == \"JFVVW2ITNSJHF\" ? \"\" : id);\n                that.callMethod(\"detailsOfIncome\", [], function (detailsOfIncome) {\n                    detail[\"detailsOfIncome\"] = detailsOfIncome;\n                    that.callMethod(\"calcuStaticProfit\", [], function (calcuStaticProfit) {\n                        if (calcuStaticProfit === '0x') {\n                            calcuStaticProfit = \"0\";\n                        }\n                        detail[\"dayProfit\"] = new BigNumber(calcuStaticProfit).dividedBy(decimal).toFixed(6);\n\n                        console.log(\"dayProfit\", detail[\"dayProfit\"].toString());\n                        that.setState({\n                            ct_details: detail\n                        })\n                    });\n\n                });\n            });\n\n        });\n\n    }\n\n\n    callMethod(_method, args, callback) {\n\n        let packData = contract.packData(_method, args);\n        let callParams = {\n            from: this.state.currentAccount.MainPKr,\n            to: ct.address,\n            data: packData\n        };\n\n        seropp.call(callParams, function (callData, error) {\n            if (error) {\n                console.log(\"error::\", error);\n            } else {\n                let res = contract.unPackData(_method, callData);\n                callback(res);\n            }\n        });\n    }\n\n    executeMethod(_method, args, value, cy, password, callback) {\n        let that = this;\n\n        let packData = contract.packData(_method, args);\n        let executeData = {\n            from: that.state.currentAccount.PK,\n            to: ct.address,\n            value: \"0x\" + value,//SERO\n            data: packData,\n            gas_price: \"0x\" + new BigNumber(\"1000000000\").toString(16),\n            cy: cy,\n        };\n        let estimateParam = {\n            from: that.state.currentAccount.MainPKr,\n            to: ct.address,\n            value: \"0x\" + value,//SERO\n            data: packData,\n            gas_price: \"0x\" + new BigNumber(\"1000000000\").toString(16),\n            cy: cy,\n        };\n        // executeData[\"gas\"] = pullup.sero.estimateGas(estimateParam);\n        seropp.estimateGas(estimateParam, function (gas, error) {\n            if (error) {\n                message.error(error);\n            } else {\n                executeData[\"gas\"] = gas;\n                seropp.executeContract(executeData, function (res) {\n                    callback(res);\n                });\n            }\n        });\n    }\n\n\n    handleCancel = () => {\n        this.setState({\n            showDeposit: false\n        })\n    }\n\n    //====  buyAsnow begin\n    handleBuyAsnowCancel = () => {\n        this.setState({showBuyAsnow: false});\n    };\n\n    handleBuyAsnowCreate = (cb) => {\n        let that = this;\n        const {form} = this.formRef.props;\n        form.validateFields((err, values) => {\n            if (err) {\n                if (cb) {\n                    cb(false)\n                }\n                return;\n            }\n            let amount = form.getFieldValue(\"Amount\");\n            try {\n                this.executeMethod(\"buyAsnow\", [], new BigNumber(amount).multipliedBy(decimal).toString(16), \"SERO\", '', function (res) {\n                    if (res) {\n                        form.resetFields();\n                        that.setState({showBuyAsnow: false});\n                        setTimeout(function () {\n                            openNotificationWithIcon('success', 'Successful', `${Lang[that.state.lang].toast.tx}${res}`)\n                        }, 3000)\n                    }\n                    if (cb) {\n                        cb(false)\n                    }\n                });\n            } catch (err) {\n                if (err) {\n                    message.error(err.message);\n                } else {\n                    message.error(\"request SERO Node error:[\" + err.message + \"]\");\n                }\n                if (cb) {\n                    cb(false)\n                }\n            }\n\n        });\n    };\n\n    //====  buyAsnow end\n\n    //====  Invest begin\n    handleInvestCancel = () => {\n        this.setState({showInvest: false});\n    };\n\n    handleInvestCreate = (cb) => {\n        let that = this;\n        const {form} = this.formRef2.props;\n        form.validateFields((err, values) => {\n            if (err) {\n                if (cb) {\n                    cb(false)\n                }\n                return;\n            }\n            let amountSero = form.getFieldValue(\"AmountSero\");\n            // let ticketSero=form.getFieldValue(\"TicketSero\");\n            let referId = form.getFieldValue(\"ReferId\");\n            let password = form.getFieldValue(\"Password\");\n\n\n            if (that.state.ct_details.referId) {\n                referId = that.state.ct_details.referId;\n            }\n            if (new BigNumber(amountSero).comparedTo(new BigNumber(this.state.balanceSero)) > 0) {\n                if (cb) {\n                    cb(false)\n                }\n                message.warn(Lang[that.state.lang].toast.lessAmount);\n            } else if (parseFloat(amountSero) < 10) {\n                if (cb) {\n                    cb(false)\n                }\n                message.warn(Lang[that.state.lang].toast.minInvest);\n            } else {\n                try {\n                    this.executeMethod(\"invest\", [referId], new BigNumber(amountSero).multipliedBy(decimal).toString(16), \"SERO\", password, function (res) {\n                        if (res) {\n                            form.resetFields();\n                            that.setState({showInvest: false});\n                            setTimeout(function () {\n                                openNotificationWithIcon('success', 'Successful', `${Lang[that.state.lang].toast.tx}${res}`)\n                            }, 3000)\n                        }\n                        if (cb) {\n                            cb(false)\n                        }\n                    });\n                } catch (err) {\n                    if (err) {\n                        message.error(err.message);\n                    } else {\n                        message.error(\"request SERO Node error:[\" + err.message + \"]\");\n                    }\n                    if (cb) {\n                        cb(false)\n                    }\n                }\n            }\n        });\n    };\n\n    calcuPrincipalProfit = (sero, cb) => {\n        if (sero) {\n            let seroHex = \"0x\" + new BigNumber(sero).multipliedBy(decimal).toString(16);\n            this.callMethod(\"calcuPrincipalProfit\", [seroHex], function (res) {\n                if (cb) {\n                    cb(res);\n                }\n            })\n        }\n    }\n\n    saveInvestFormRef = formRef => {\n        this.formRef2 = formRef;\n    };\n\n    //====  Invest end\n\n    shareProfit() {\n        let that = this;\n        try {\n            this.executeMethod(\"triggerStaticProfit\", [], \"0\", \"SERO\", '', function (res) {\n                if (res) {\n                    openNotificationWithIcon('success', 'Successful', `${Lang[that.state.lang].toast.tx}${res}`)\n                } else {\n                    if (res.error) {\n                        message.error(res.error.message);\n                    } else {\n                        message.error(\"request SERO Node error:[\" + res + \"]\");\n                    }\n                }\n            });\n        } catch (err) {\n            if (err) {\n                message.error(err.message);\n            } else {\n                message.error(\"request SERO Node error:[\" + err.message + \"]\");\n            }\n        }\n\n    }\n\n    withdraw() {\n        let that = this;\n        try {\n            this.executeMethod(\"withdrawBalance\", [], \"0\", \"SERO\", '', function (res) {\n                if (res) {\n                    openNotificationWithIcon('success', 'Successful', `${Lang[that.state.lang].toast.tx}${res}`)\n                } else {\n                    if (res.error) {\n                        message.error(res.error.message);\n                    } else {\n                        message.error(\"request SERO Node error:[\" + res + \"]\");\n                    }\n                }\n            });\n        } catch (err) {\n            if (err) {\n                message.error(err.message);\n            } else {\n                message.error(\"request SERO Node error:[\" + err.message + \"]\");\n            }\n        }\n    }\n\n\n    //==== Buy Ticket begin\n\n\n    //==== Buy Ticket end\n\n    render() {\n        const {loading, showAccountSelect, currentAccount} = this.state;\n        let accountName = currentAccount.PK;\n        let that = this;\n        let staticReward = that.state.ct_details.detailsOfIncome ? new BigNumber(that.state.ct_details.detailsOfIncome[0]).dividedBy(decimal).toFixed(2) : 0;\n        let recommendReward = that.state.ct_details.detailsOfIncome ? new BigNumber(that.state.ct_details.detailsOfIncome[1]).dividedBy(decimal).toFixed(2) : 0;\n        let nobilityReward = that.state.ct_details.detailsOfIncome ? new BigNumber(that.state.ct_details.detailsOfIncome[2]).dividedBy(decimal).toFixed(2) : 0;\n        let vipReward = that.state.ct_details.detailsOfIncome ? new BigNumber(that.state.ct_details.detailsOfIncome[3]).dividedBy(decimal).toFixed(2) : 0;\n        // let currentIncome = that.state.ct_details.detailsOfIncome?new BigNumber(that.state.ct_details.detailsOfIncome[4]).dividedBy(decimal).toFixed(2):0;\n        let staticTimestamp = that.state.ct_details.detailsOfIncome ? that.state.ct_details.detailsOfIncome[5] : 0;\n\n        const salesPieData = [\n            {\n                x: Lang[this.state.lang].account.title.staticReward,\n                y: parseFloat(staticReward),\n            },\n            {\n                x: Lang[this.state.lang].account.title.recommendReward,\n                y: parseFloat(recommendReward),\n            },\n            {\n                x: Lang[this.state.lang].account.title.nobilityReward,\n                y: parseFloat(nobilityReward),\n            },\n            {\n                x: Lang[this.state.lang].account.title.vipReward,\n                y: parseFloat(vipReward),\n            },\n\n        ];\n\n        const showChart = parseFloat(staticReward) > 0 || parseFloat(recommendReward) > 0 || parseFloat(nobilityReward) > 0 || parseFloat(vipReward) > 0\n\n        const countDown = nextShareTime();\n        let totalReturnDay = this.state.ct_balanceOfSero ? new BigNumber(this.state.ct_balanceOfSero).dividedBy(30).toFixed(6) : \"0\";\n        let returnPercent = 0;\n        console.log(\"this.state.ct_details.returnAmount:\", this.state.ct_details.returnAmount);\n        if (this.state.ct_details.returnAmount && parseFloat(this.state.ct_details.returnAmount) > 0) {\n            let a = parseFloat(this.state.ct_details.returnAmount);\n            let b = new BigNumber(this.state.ct_details.amount).multipliedBy(this.state.ct_details.profitLevel).toString(10);\n            returnPercent = (a * 100 / parseFloat(b)).toFixed(2);\n        }\n\n        // let showCountDown = new Date(staticTimestamp * 1000).getUTCDate() === parseInt(new Date().getUTCDate());\n\n        let showCountDown = Math.ceil((staticTimestamp * 1000) / (600 * 1000)) === nextShareTime() / (600 * 1000);\n        return (\n            <div className=\"App\" style={{marginTop: '0px'}}>\n                <div className=\"header-n\">\n                    <img src={Head} width={\"100%\"}/>\n                </div>\n                <div className=\"content-n\">\n                    <div className=\"account-n\">\n                        <div style={{\n                            fontSize: '14px',\n                            margin: \"5px\",\n                            color: '#fff'\n                        }}>{Lang[this.state.lang].account.title.utxo}</div>\n                        <div className={\"account-nr\"}>\n                            <Row>\n                                <Col span={18}>\n                                    <span\n                                        className={\"spanx\"}>{accountName ? accountName.slice(0, 10) + \"...\" + accountName.slice(-10) : \"\"}{this.state.ct_details.isKing ?\n                                        <Tag color=\"gold\">VIP</Tag> : \"\"}</span>\n                                </Col>\n                                <Col span={6} style={{textAlign: 'center'}}>\n                                    <Button size=\"small\" type={\"primary\"}\n                                            onClick={() => {\n                                                this.setState({\n                                                    showAccountSelect: true\n                                                })\n                                            }}>{Lang[this.state.lang].account.title.swith}</Button>\n                                </Col>\n                            </Row>\n                            <Row>\n                                <p style={{textAlign: 'center', marginTop: '5px', color: '#fff'}}>\n                                    {this.state.balanceSero} SERO\n                                </p>\n                            </Row>\n                            <p style={{textAlign: 'center'}}>\n                                <Button size={\"small\"} type={\"primary\"} onClick={() => this.showDeposit()}>充值</Button>\n                            </p>\n                        </div>\n                    </div>\n                    <div className={\"contract-tn\"}>\n                        <div className={\"contract-dn\"}>\n                            <div className=\"contract-n\">\n                                <h2 style={{\n                                    textAlign: 'center',\n                                    fontSize: '16px',\n                                    color: '#fff',\n                                    marginTop: '10px'\n                                }}>{Lang[this.state.lang].account.title.contract}</h2>\n                                <Divider/>\n                                <div>\n                                    <Row>\n                                        <Col span={18}><span\n                                            className={\"spanx\"}>{Lang[this.state.lang].account.title.estimatedTotal}:{new BigNumber(this.state.ct_details.amount ? this.state.ct_details.amount : 0).multipliedBy(this.state.ct_details.profitLevel ? this.state.ct_details.profitLevel : 0).toFixed(6)}</span></Col>\n                                        <Col span={6} style={{textAlign: 'center'}}>\n                                            {/*<Button size={\"small\"}*/}\n                                            {/*        type={\"primary\"}><span>{Lang[this.state.lang].account.button.invest}</span></Button>*/}\n                                            <Button size={\"small\"}\n                                                    type={\"primary\"} onClick={() => {\n                                                this.setState({showInvest: true})\n                                            }}>{Lang[this.state.lang].account.button.invest}</Button>\n                                        </Col>\n                                    </Row>\n                                    <p/>\n                                    <Row>\n                                        <Col span={18}><span\n                                            className={\"spanx\"}>{Lang[this.state.lang].account.title.staticIncome} {this.state.ct_details.dayProfit}</span></Col>\n                                        <Col span={6} style={{textAlign: 'center'}}>\n                                            {\n                                                showCountDown ?\n                                                    <Countdown style={{marginTop: 14}} title=\"\" format=\"HH:mm:ss\"\n                                                               value={parseFloat(countDown)} onFinish={() => {\n                                                        this.getDetail()\n                                                    }}/> : <Button style={{marginTop: 16}} type=\"primary\"\n                                                                   disabled={showCountDown} onClick={() => {\n                                                        this.shareProfit()\n                                                    }}>{Lang[this.state.lang].account.button.trigger}</Button>\n                                            }\n                                        </Col>\n                                    </Row>\n                                    <p/>\n                                    <Row>\n                                        <Col span={18}><span\n                                            className={\"spanx\"}>{Lang[this.state.lang].account.title.withdraw}:{new BigNumber(this.state.ct_details.value ? this.state.ct_details.value : 0).toFixed(6)}</span></Col>\n                                        <Col span={6} style={{textAlign: 'center'}}>\n                                            <Button style={{marginTop: 16}}\n                                                    disabled={new BigNumber(this.state.ct_details.value ? this.state.ct_details.value : 0).comparedTo(0) < 1}\n                                                    type=\"primary\" onClick={() => {\n                                                this.withdraw()\n                                            }}>{Lang[this.state.lang].account.button.withdraw}</Button>\n                                        </Col>\n                                    </Row>\n                                </div>\n                                <div>\n                                    {\n                                        showChart ?\n                                            <Row style={{textAlign: 'center'}}>\n                                                <Col span={24} style={{textAlign: 'center'}}>\n                                                    <div>\n                                                        {returnPercent > 0 ? <WaterWave height={234}\n                                                                                        title={Lang[this.state.lang].account.title.totalReturn}\n                                                                                        percent={returnPercent}/> :\n                                                            <WaterWave height={234}\n                                                                       title={Lang[this.state.lang].account.title.totalReturn}\n                                                                       percent={0}/>}\n                                                    </div>\n                                                </Col>\n                                                <Col span={24} style={{textAlign: 'left'}}>\n                                                    <Pie\n                                                        hasLegend\n                                                        animate\n                                                        title={Lang[this.state.lang].account.title.totalReturn}\n                                                        subTitle={Lang[this.state.lang].account.title.totalReturn}\n                                                        total={() => (\n                                                            <span\n                                                                dangerouslySetInnerHTML={{\n                                                                    __html: salesPieData.reduce((pre, now) => now.y + pre, 0),\n                                                                }}\n                                                            />\n                                                        )}\n                                                        data={salesPieData}\n                                                        valueFormat={val => <span\n                                                            dangerouslySetInnerHTML={{__html: val}}/>}\n                                                        height={248}\n                                                    />\n                                                </Col>\n                                            </Row> : \"\"\n                                    }\n                                </div>\n                                <Divider dashed={true}/>\n                                <Row style={{textAlign: 'center'}}>\n                                    <Col span={12}>\n                                        <Statistic title={Lang[this.state.lang].account.title.totalReturnDay}\n                                                   value={totalReturnDay} precision={6}/>\n                                    </Col>\n                                    <Col span={12}>\n                                        <Statistic title={Lang[this.state.lang].account.title.dayIncome}\n                                                   value={this.state.ct_details.dayProfit && parseFloat(totalReturnDay) > 0 ? new BigNumber(this.state.ct_details.dayProfit).multipliedBy(100).dividedBy(totalReturnDay).toFixed(2) : \"0\"}\n                                                   suffix={\"%\"}/>\n                                    </Col>\n\n                                </Row>\n                                <Row style={{textAlign: 'center'}}>\n                                    <p/>\n                                    <Col span={12}>\n                                        <Statistic title={Lang[this.state.lang].account.title.areaTotal}\n                                                   value={this.state.ct_details.largeAreaTotal} precision={6}/>\n                                    </Col>\n                                    <Col span={12}>\n                                        <Statistic title={Lang[this.state.lang].account.title.areaOtherTotal}\n                                                   value={new BigNumber(this.state.ct_details.achievement).minus(new BigNumber(this.state.ct_details.largeAreaTotal)).toFixed(6)}\n                                                   precision={6}/>\n                                    </Col>\n                                </Row>\n\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className=\"contract-detail-n\">\n                        <Skeleton loading={loading}>\n                            <Descriptions\n                                title={<h2 style={{color: '#fff'}}>{Lang[this.state.lang].project.title}</h2>}>\n                                <Descriptions.Item label={Lang[this.state.lang].project.contractAddress}>\n                                    <small>{ct.address}</small>\n                                </Descriptions.Item>\n                            </Descriptions>\n\n                            <Divider dashed={true}/>\n                            <Descriptions title={<h4\n                                style={{color: '#fff'}}>{Lang[this.state.lang].account.title.investDetail}</h4>}>\n                                <Descriptions.Item\n                                    label={Lang[this.state.lang].account.title.id}>{this.state.ct_details.id}</Descriptions.Item>\n                                <Descriptions.Item\n                                    label={Lang[this.state.lang].account.title.referId}>{this.state.ct_details.referId}</Descriptions.Item>\n                                <Descriptions.Item\n                                    label={Lang[this.state.lang].account.title.areaId}>{this.state.ct_details.largeAreaId}</Descriptions.Item>\n                                <Descriptions.Item\n                                    label={Lang[this.state.lang].account.title.totalInvest}>{this.state.ct_details.amount}</Descriptions.Item>\n                                <Descriptions.Item\n                                    label={Lang[this.state.lang].account.title.profitLevel}>{this.state.ct_details.profitLevel}</Descriptions.Item>\n                                <Descriptions.Item\n                                    label={Lang[this.state.lang].account.title.latestTime}>{convertUTCDate(staticTimestamp)}</Descriptions.Item>\n                            </Descriptions>\n                        </Skeleton>\n                    </div>\n                </div>\n                <div className=\"footer-n\">\n                    <span>风险投资 谨慎参与</span>\n                </div>\n\n                <SelectAccount visible={showAccountSelect} selectAccount={this.selectAccount}\n                               hiddenAccount={this.hiddenAccount}/>\n\n                <Modal\n                    title={Lang[this.state.lang].account.modal.deposit.title}\n                    visible={this.state.showDeposit}\n                    onCancel={this.handleCancel}\n                    footer={null}\n                    getContainer={false}\n                >\n                    <div style={{textAlign: \"center\"}}>\n                        <canvas id=\"qrImg\"></canvas>\n                        <p style={{wordBreak: 'normal', whiteSpace: 'pre-wrap', wordWrap: 'break-word'}}>\n                            <small>{this.state.currentAccount.MainPKr}</small></p>\n                        <Button className='copyTxt' type=\"primary\" onClick={() => {\n                            copy(this.state.currentAccount.MainPKr);\n                            message.success('Copy to clipboard successfully');\n                        }}>{Lang[this.state.lang].account.modal.deposit.copy}</Button>\n                    </div>\n                </Modal>\n\n\n                <InvestForm\n                    wrappedComponentRef={this.saveInvestFormRef}\n                    visible={this.state.showInvest}\n                    onCancel={this.handleInvestCancel}\n                    onCreate={this.handleInvestCreate}\n                    sero={this.state.balanceSero}\n                    asnow={this.state.ct_details.asnowBalances}\n                    calcuPrincipalProfit={this.calcuPrincipalProfit}\n                    lang={this.state.lang}\n                    times={this.state.ct_details.profitLevel}\n                    referId={this.state.ct_details.referId}\n                />\n\n\n            </div>\n        );\n    }\n}\n\n\nclass App extends Component {\n    constructor() {\n        super();\n        this.state = {\n            locale: zhCN,\n        };\n    }\n\n    componentWillMount() {\n        let lang = localStorage.getItem(\"lang\");\n        let locale = zhCN;\n        if (lang) {\n            if (lang === \"zh_CN\") {\n                locale = zhCN;\n            } else if (lang === \"en_US\") {\n                locale = enUS;\n            }\n        } else {\n            locale = zhCN;\n            localStorage.setItem(\"lang\", \"zh_CN\");\n        }\n\n        this.setState({\n            locale: locale\n        })\n    }\n\n    changeLocale = e => {\n        const localeValue = e.target.value;\n        this.setState({locale: localeValue});\n        if (localeValue.locale === \"en\") {\n            localStorage.setItem(\"lang\", \"en_US\");\n        } else if (localeValue.locale === \"zh-cn\") {\n            localStorage.setItem(\"lang\", \"zh_CN\");\n        }\n    };\n\n    render() {\n        const {locale} = this.state;\n        return (\n            <div className=\"App\" style={{height: document.documentElement.clientHeight}}>\n                <Layout className=\"layout\">\n                    {/*<Header className=\"header\">*/}\n                    {/*    <div className=\"logo\"><img src={logo}/></div>*/}\n                    {/*    <div className=\"change-locale\">*/}\n                    {/*        <Radio.Group value={locale} onChange={this.changeLocale}>*/}\n                    {/*            <Radio.Button key=\"en\" value={enUS}>*/}\n                    {/*                English*/}\n                    {/*            </Radio.Button>*/}\n                    {/*            <Radio.Button key=\"cn\" value={zhCN}>*/}\n                    {/*                中文*/}\n                    {/*            </Radio.Button>*/}\n                    {/*        </Radio.Group>*/}\n                    {/*    </div>*/}\n                    {/*</Header>*/}\n\n                    <ConfigProvider locale={locale}>\n                        <ContentPage key={locale ? locale.locale : 'en'}/>\n                    </ConfigProvider>\n                    <Footer style={{textAlign: 'center'}}/>\n                </Layout>\n            </div>\n        );\n    }\n}\n\nfunction convertUTCDate(dateTimestamp) {\n    if (dateTimestamp && dateTimestamp > 0) {\n        let cDate = new Date(dateTimestamp * 1000);\n        return appendZero(cDate.getMonth() + 1) + \"/\" + appendZero(cDate.getDate()) + \" \" + appendZero(cDate.getHours()) + \":\" + appendZero(cDate.getMinutes());\n    }\n    return \"\"\n}\n\nfunction nextShareTime() {\n    let d = new Date();\n    // d.setTime(d.getTime() + 24 * 60 * 60 * 1000);\n    // let year = d.getUTCFullYear();\n    // let month = d.getUTCMonth();\n    // let day = d.getUTCDate();\n    //\n    // d = new Date(year, month, day, 0, 0, 0);\n    //\n    // let tz = new Date().getTimezoneOffset() / 60;\n    // return d.getTime() + (-tz) * 60 * 60 * 1000;\n    let time = d.getTime() + 600 * 1000;\n    time = time - time % (600 * 1000);\n    return time;\n}\n\nfunction appendZero(i) {\n    i = i < 10 ? \"0\" + i : i;\n    return i;\n}\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}